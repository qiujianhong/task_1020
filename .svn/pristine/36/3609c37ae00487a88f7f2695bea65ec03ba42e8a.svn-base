#include "baseCommon.h"
#include "oadInfoList.h"
#include "oopservice.h"
#include "commClass.h"
#include "oopStorage.h"
#include "area.h"
#include "appcomm.h"
#include "oopservice.h"

//将版本信息以全局变量的形式写入各个地区的代码中，统一在 area.h 中引用
#ifdef ADV_PU_AMR
FACTORY_VER_TMP_T g_tVer = 
{
    "XXXX",      /**< 厂商代码           */
    "CA01",      /**< 软件版本号         */
    "220623",    /**< 软件版本日期       */
    "CC01",      /**< 硬件版本号         */
    "220621",    /**< 硬件版本日期       */
    "CA01-01",   /**< 厂家扩展信息       */
};
#elif ADV_ST_AMR
    #ifdef PRODUCT_ECU
    //能源控制器
    FACTORY_VER_TMP_T g_tVer = 
    {
        "XXXX",      /**< 厂商代码           */
        "EA01",      /**< 软件版本号         */
        "220619",    /**< 软件版本日期       */
        "ER01",      /**< 硬件版本号         */
        "220619",    /**< 硬件版本日期       */
        "EA01-01",   /**< 厂家扩展信息       */
    };
    #elif PRODUCT_ZCU_1
    //专变1型
    FACTORY_VER_TMP_T g_tVer = 
    {
        "XXXX",      /**< 厂商代码           */
        "1J01",      /**< 软件版本号         */
        "220823",    /**< 软件版本日期       */
        "Z101",      /**< 硬件版本号         */
        "220727",    /**< 硬件版本日期       */
        "1J01-02",   /**< 厂家扩展信息       */
    };
    #elif PRODUCT_ZCU_2
    //专变2型
    FACTORY_VER_TMP_T g_tVer = 
    {
        "XXXX",      /**< 厂商代码           */
        "2A01",      /**< 软件版本号         */
        "220715",    /**< 软件版本日期       */
        "Z301",      /**< 硬件版本号         */
        "220715",    /**< 硬件版本日期       */
        "2A01-01",   /**< 厂家扩展信息       */
    };
    #elif PRODUCT_ZCU_3
    //专变3型
    FACTORY_VER_TMP_T g_tVer = 
    {
        "XXXX",      /**< 厂商代码           */
        "3A01",      /**< 软件版本号         */
        "220716",    /**< 软件版本日期       */
        "Z301",      /**< 硬件版本号         */
        "220715",    /**< 硬件版本日期       */
        "3A01-01",   /**< 厂家扩展信息       */
    };
     #elif PRODUCT_ZCU_N
    //QT专变
    FACTORY_VER_TMP_T g_tVer = 
    {
        "XXXX",      /**< 厂商代码           */
        "NA01",      /**< 软件版本号         */
        "210207",    /**< 软件版本日期       */
        "ZN01",      /**< 硬件版本号         */
        "200624",    /**< 硬件版本日期       */
        "NA01-01",   /**< 厂家扩展信息       */
    };
    #endif
#endif


#ifdef ADV_PU_AMR
// 普通方案，列出APDU，长度，数量
const uint8 actDefaultNormalSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    // 方案一
    {
    0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x01,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
    0x00,0x01,0x23,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x11,0x02,0x00,0x5b,0x00,0x00,0x12,
    0x02,0x00,0x5b,0x00,0x00,0x13,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x21,0x02,
    0x00,0x5b,0x00,0x00,0x22,0x02,0x00,0x5b,0x00,0x00,0x23,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,0x00,
    0x5b,0x00,0x00,0x31,0x02,0x00,0x5b,0x00,0x00,0x32,0x02,0x00,0x5b,0x00,0x00,0x33,0x02,0x00,0x5b,
    0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x41,0x02,0x00,0x5b,0x00,0x00,0x42,0x02,0x00,0x5b,0x00,
    0x00,0x43,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,0x00,0x00,
    0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,0x20,
    0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
    0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x02,0x02,0x00,0x5b,0x00,0x20,0x03,0x02,0x00,
    0x5b,0x00,0x20,0x01,0x04,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,0x02,0x00,0x5b,
    0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,0x00,
    0x40,0x00,0x02,0x00,0x5c,0x02,0x01,0x6a,0x16,0x01,0x00
    },
    //方案二
    {
    0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x02,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,0x00,
    0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,
    0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,
    0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,
    0x00,0x5c,0x02,0x01,0x6a,0x16,0x03,0x00
    },
    //方案三
    {
    0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x03,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,0x00,
    0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x0c,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,0x02,
    0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,0x02,
    0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x5c,0x02,0x01,
    0x6a,0x16,0x01,0x00
    },
    //方案四 
    {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x04,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
     0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
     0x02,0x00,0x5c,0x02,0x01,0x6a,0x16,0x07,0x00},
    //方案五
    {
    0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x05,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
    0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x0f,0x20,0x21,0x02,0x00,0x00,0x10,
    0x02,0x01,0x00,0x20,0x02,0x01,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x01,0x00,
    0x60,0x02,0x01,0x00,0x70,0x02,0x01,0x00,0x80,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,
    0x20,0x01,0x04,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,0x02,0x00,0x5c,0x02,0x01,
    0x6a,0x16,0x06,0x00
    },
    //方案六
    {0x07,0x01,0x37,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x06,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x16,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,
     0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,
     0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,
     0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
     0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x02,0x02,0x00,0x5b,0x00,0x20,0x03,0x02,0x00,0x5b,
     0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,
     0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x05,0x16,0x18,
     0x21,0x22,0x23,0x16,0x01,0x00},
    //方案七
    {0x07,0x01,0x00,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x07,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
     0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
     0x02,0x00,0x5c,0x02,0x05,0x16,0x18,0x21,0x22,0x23,0x16,0x03,0x00},
    //方案八
    {0x07,0x01,0x35,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x08,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
    0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x0c,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,
    0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,
    0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x5c,0x02,
    0x05,0x16,0x18,0x21,0x22,0x23,0x16,0x01,0x00},
    //方案九
    {0x07,0x01,0x2b,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x09,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,
    0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
    0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
    0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
    0x02,0x00,0x5c,0x02,0x05,0x16,0x18,0x21,0x22,0x23,0x16,0x07,0x00},
    //方案十
    {0x07,0x01,0x09,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0a,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
    0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x0f,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
    0x01,0x00,0x20,0x02,0x01,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x01,0x00,0x60,0x02,
    0x01,0x00,0x70,0x02,0x01,0x00,0x80,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x01,0x04,
    0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,0x02,0x00,0x5c,0x02,0x05,0x16,0x18,0x21,0x22,
    0x23,0x16,0x06,0x00},
    //方案十一
    {0x07,0x01,0x21,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0b,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x05,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
     0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5c,0x02,0x03,0x34,0x36,0x39,0x16,
     0x01,0x00},
    //方案十二
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0c,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x03,0x34,0x36,0x39,0x16,0x03,0x00},
    //方案十三
    {0x07,0x01,0x23,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0d,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,
     0x03,0x34,0x36,0x39,0x16,0x01,0x00},
    //方案十四
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0e,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x03,0x34,0x36,0x39,0x16,0x07,0x00},
    //方案十五
    {0x07,0x01,0x25,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0f,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
     0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x06,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
     0x01,0x00,0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x5c,0x02,0x03,
     0x34,0x36,0x39,0x16,0x06,0x00},
    //方案十六
    {0x07,0x01,0x37,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x10,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x16,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,
     0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,
     0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,
     0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
     0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x02,0x02,0x00,0x5b,0x00,0x20,0x03,0x02,0x00,0x5b,
     0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,
     0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x03,0x48,0x4a,
     0x57,0x16,0x01,0x00},
    //方案十七
    {0x07,0x01,0x00,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x11,0x12,0x01,0xe0,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
     0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
     0x02,0x00,0x5c,0x02,0x03,0x48,0x4a,0x57,0x16,0x03,0x00},
    //方案十八
    {0x07,0x01,0x35,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x12,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x0c,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,
     0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,
     0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x5c,0x02,
     0x03,0x48,0x4a,0x57,0x16,0x01,0x00},
    //方案十九
    {0x07,0x01,0x2b,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x13,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
     0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
     0x02,0x00,0x5c,0x02,0x03,0x48,0x4a,0x57,0x16,0x07,0x00},

    //方案二十
    {0x07,0x01,0x09,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x14,0x12,0x02,0xe8,0x02,0x02,0x11,0x03,
     0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x0f,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
     0x01,0x00,0x20,0x02,0x01,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x01,0x00,0x60,0x02,
     0x01,0x00,0x70,0x02,0x01,0x00,0x80,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x01,0x04,
     0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,0x02,0x00,0x5c,0x02,0x03,0x48,0x4a,0x57,0x16,
     0x06,0x00},


    //方案二十一
    {0x07,0x01,0x21,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x15,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x02,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,0x03,0x52,
     0x54,0x58,0x16,0x01,0x00},
    //方案二十二
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x16,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x03,0x52,0x54,0x58,0x16,0x03,0x00},
    //方案二十三
    {0x07,0x01,0x23,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x17,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,
     0x03,0x52,0x54,0x58,0x16,0x01,0x00},
    //方案二十四
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x18,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x03,0x52,0x54,0x58,0x16,0x07,0x00},
     //方案二十五
    {0x07,0x01,0x25,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x19,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
     0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x06,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
     0x01,0x00,0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x5c,0x02,0x03,
     0x52,0x54,0x58,0x16,0x06,0x00},
    //方案26
    {0x07,0x01,0x21,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1a,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x06,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
     0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5c,
     0x02,0x01,0x74,0x16,0x01,0x00},
     //方案27
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1b,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x01,0x74,0x16,0x03,0x00},
     //方案28
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1c,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x01,0x74,0x16,0x05,0x00},
     //方案29
    {0x07,0x01,0x25,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1d,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
     0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x08,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
     0x01,0x00,0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,
     0x00,0x20,0x0a,0x02,0x00,0x5c,0x02,0x01,0x74,0x16,0x06,0x00},
     //方案30
    {0x07,0x01,0x37,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1e,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
     0x00,0x01,0x10,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,
     0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,
     0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,
     0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
     0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5c,
     0x02,0x01,0x73,0x16,0x01,0x00},
     //方案31
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x1f,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x01,0x73,0x16,0x03,0x00},
     //方案32
    {0x07,0x01,0x22,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x20,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
     0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
     0x02,0x00,0x5c,0x02,0x01,0x73,0x16,0x07,0x00},
     //方案33
    {0x07,0x01,0x25,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x21,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
     0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x07,0x20,0x21,0x02,0x00,0x00,0x10,0x02,
     0x01,0x00,0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x0a,0x02,
     0x00,0x5c,0x02,0x01,0x73,0x16,0x06,0x00},
     
};
const uint16 actDefaultNormalSchLen[] = 
{
    240, //方案1
    89, //方案2
    85, //方案3
    89, //方案4
    100,  //方案5
    166, //方案6
    93, //方案7
    89,  //方案8
    93,  //方案9
    104,  //方案10
    62,  //方案11
    51,  //方案12
    47,  //方案13
    51,  //方案14
    66,  //方案15
    164,  //方案16
    91, //方案17
    87,  //方案18
    91,  //方案19
    102,  //方案20
    44,  //方案21
    51, //方案22
    47,  //方案23
    51,  //方案24
    66,  //方案25
    66,  //方案26
    49, //方案27
    49, //方案28
    72, //方案29
    126,    //方案30
    49,     //方案31
    49,     //方案32
    68,     //方案33
};
const uint32 actDefaultNormalSchNum = sizeof(actDefaultNormalSch)/LOCAL_RECV_FRAM_MAXLEN;


// 事件方案，列出APDU，长度，数量
const uint8 actDefaultEventSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    {0x07,0x01,0x27,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x01,0x02,0x02,0x11,0x00,0x01,0x06,0x52,0x30,
     0x05,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x05,0x08,0x00,
     0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x05,0x09,0x00,0x03,0x20,0x1e,
     0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1b,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
     0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x11,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
     0x20,0x22,0x02,0x00,0x52,0x30,0x13,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
     0x00,0x5c,0x01,0x03,0x01,0x12,0x00,0x40,0x00},
     
    {0x07,0x01,0x28,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x02,0x02,0x02,0x11,0x00,0x01,0x01,0x52,0x30,
     0x2c,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x5c,0x01,0x03,0x00,0x12,
     0x00,0x40,0x00},
     
    {0x07,0x01,0x2b,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x03,0x02,0x02,0x11,0x00,0x01,0x13,0x52,0x30,
    0x00,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x00,0x08,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x00,0x09,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
    0x00,0x52,0x30,0x02,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,
    0x02,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x02,0x09,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x07,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x52,0x30,0x04,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
    0x00,0x52,0x30,0x04,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,
    0x04,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x0f,0x02,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x16,0x02,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1c,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1d,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x5c,0x01,0x03,0x00,0x12,0x00,0x40,0x00},
    
};
const uint16 actDefaultEventSchLen[] = 
{
    135,
    45,
    369,
};
const uint32 actDefaultEventSchNum = sizeof(actDefaultEventSch)/LOCAL_RECV_FRAM_MAXLEN;

// 任务，列出APDU，长度，数量
const uint8 actDefaultTask[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //任务1
    {0x07, 0x01, 0x05, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x01, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x01, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务2
    {0x07, 0x01, 0x06, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x02, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x02, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务3
    {0x07, 0x01, 0x07, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x03, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x03, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0f, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务4
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x04, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x04, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务5
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x05, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x05, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务6
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x06, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x06, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务7
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x07, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x07, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0A, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务8
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x08, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x08, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0f, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务9
    {0x07, 0x01, 0x0d, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x09, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x09, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务10
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0a, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x0a, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务11
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0b, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x0b, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务12
    {0x07, 0x01, 0x10, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0c, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0c, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务13
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0d, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0d, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0f, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务14
    {0x07, 0x01, 0x12, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0e, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0e, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务15
    {0x07, 0x01, 0x13, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0f, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x0f, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务16
    {0x07, 0x01, 0x14, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x10, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x10, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务17
    {0x07, 0x01, 0x15, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x11, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x11, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务18
    {0x07, 0x01, 0x07, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x12, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x12, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0f, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务19
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x13, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x13, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务20
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x14, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x14, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务21
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x15, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x15, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务22
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x16, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x16, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务23
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x17, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x17, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0f, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务24
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x18, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x18, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务25
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x19, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x19, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务26
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1a, 0x54, 0x01, 0x00, 0x3c, 
     0x16, 0x01, 0x11, 0x1a, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务27
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1b, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1b, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务28
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1c, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1c, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务29
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1d, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x1d, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务30
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1e, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1e, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务31
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1f, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1f, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务32
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x20, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x20, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务33
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x21, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x21, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},

    //任务35事件
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x23, 0x54, 0x02, 0x00, 0x02, 
     0x16, 0x02, 0x11, 0x01, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务36
    {0x07, 0x01, 0x12, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x24, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x02, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务37
    {0x07, 0x01, 0x13, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x25, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x03, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},

};
const uint16 actDefaultTaskLen[] = 
{
    68, //任务1
    68, //任务2
    68, //任务3
    68, //任务4
    68, //任务5
    68, //任务6
    68, //任务7
    68, //任务8
    68, //任务9
    68, //任务10
    68, //任务11
    68, //任务12
    68, //任务13
    68, //任务14
    68, //任务15
    68, //任务16
    68, //任务17
    68, //任务18
    68, //任务19
    68, //任务20
    68, //任务21
    68, //任务22
    68, //任务23
    68, //任务24
    68, //任务25
    68, //任务26
    68, //任务27
    68, //任务28
    68, //任务29
    68, //任务30
    68, //任务31
    68, //任务32
    68, //任务33
    68, //任务35
    68, //任务36
    68, //任务37
};
const uint32 actDefaultTaskNum = sizeof(actDefaultTask)/LOCAL_RECV_FRAM_MAXLEN;

#elif ADV_ST_AMR
// 普通方案，列出APDU，长度，数量
const uint8 actDefaultNormalSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    // 方案一 交采实时采集任务
    {
        0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x01,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
        0x00,0x01,0x12,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,
        0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,
        0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,
        0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
        0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,0x02,0x00,0x5b,
        0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x01,0x00

    },
    //方案二 电能表实时采集任务
    {
        0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x02,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
        0x00,0x01,0x17,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,
        0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,
        0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,
        0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,
        0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x01,0x04,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,
        0x00,0x20,0x05,0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5b,0x00,0x20,
        0x14,0x02,0x00,0x5b,0x00,0x20,0x13,0x02,0x00,0x5b,0x00,0x40,0x00,0x02,0x00,0x5b,0x00,0x22,0x03,0x02,
        0x00,0x5c,0x01,0x16,0x01,0x00

    },
    //方案三十二 电能表实时采集任务 方案2的延续 子oad太多
    {
        0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x20,0x12,0x00,0x01,0x02,0x02,0x11,0x00,
        0x00,0x01,0x0f,0x5b,0x00,0x30,0x13,0x07,0x01,0x5b,0x00,0x30,0x13,0x0a,0x01,0x5b,0x00,0x30,0x14,0x07,
        0x01,0x5b,0x00,0x30,0x14,0x0a,0x01,0x5b,0x00,0x30,0x15,0x07,0x01,0x5b,0x00,0x30,0x15,0x0a,0x01,0x5b,
        0x00,0x30,0x16,0x07,0x01,0x5b,0x00,0x30,0x12,0x07,0x01,0x5b,0x00,0x30,0x12,0x0a,0x01,0x5b,0x00,0x30,
        0x03,0x0a,0x02,0x5b,0x00,0x30,0x03,0x0e,0x02,0x5b,0x00,0x30,0x03,0x0a,0x03,0x5b,0x00,0x30,0x03,0x0e,
        0x03,0x5b,0x00,0x30,0x03,0x0a,0x04,0x5b,0x00,0x30,0x03,0x0e,0x04,0x5c,0x01,0x16,0x01,0x00


    },
    //方案三 日冻结采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x03,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x10,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,
        0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,
        0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,
        0x02,0x00,0x21,0x31,0x02,0x01,0x21,0x32,0x02,0x01,0x21,0x33,0x02,0x01,0x5c,0x01,0x16,0x03,0x00

    },
    
    //方案四 抄表日冻结采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x04,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x15,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,
        0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,
        0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x22,0x03,
        0x02,0x00,0x30,0x13,0x07,0x01,0x30,0x13,0x0a,0x01,0x30,0x14,0x07,0x01,0x30,0x14,0x0a,0x01,0x30,0x15,
        0x07,0x01,0x30,0x15,0x0a,0x01,0x30,0x16,0x07,0x01,0x30,0x16,0x0a,0x01,0x5c,0x01,0x16,0x01,0x00

    
    }, 
    //方案三十四        抄表日冻结采集任务 方案4的延续
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x22,0x12,0x00,0x1f,0x02,0x02,0x11,0x00,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x12,0x30,0x12,0x07,0x01,0x30,0x12,0x0a,0x01,0x20,0x14,
        0x02,0x00,0x20,0x13,0x02,0x00,0x30,0x02,0x0a,0x02,0x30,0x01,0x0a,0x02,0x30,0x02,0x0a,0x03,0x30,0x01,
        0x0a,0x03,0x30,0x02,0x0a,0x04,0x30,0x01,0x0a,0x04,0x30,0x1d,0x07,0x01,0x30,0x1e,0x07,0x01,0x30,0x03,
        0x0a,0x02,0x30,0x03,0x0e,0x02,0x30,0x03,0x0a,0x03,0x30,0x03,0x0e,0x03,0x30,0x03,0x0a,0x04,0x30,0x03,
        0x0e,0x04,0x5c,0x01,0x16,0x01,0x00

    
    },
    //方案五 月冻结采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x05,0x12,0x00,0x0c,0x02,0x02,0x11,0x01,
        0x11,0x01,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x0d,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,
        0x20,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,
        0x70,0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,
        0x40,0x02,0x00,0x5c,0x01,0x16,0x07,0x00

    },
    //方案六 交采5分钟曲线采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x06,0x12,0x22,0xe0,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x05,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x0a,0x00,0x10,0x02,0x01,0x00,0x20,0x02,
        0x01,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,
        0x00,0x20,0x05,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x06,0x00
    },
    //方案七 15分钟常规负荷曲线采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x07,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x0b,0x00,0x10,0x02,0x01,0x00,0x20,0x02,
        0x01,0x00,0x50,0x02,0x01,0x00,0x60,0x02,0x01,0x00,0x70,0x02,0x01,0x00,0x80,0x02,0x01,0x20,0x00,0x02,
        0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,0x02,0x00,0x5c,0x01,0x16,
        0x06,0x00

    },
    //方案八 远程动态费率电表15分钟电能曲线采任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x08,0x12,0x17,0x40,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x07,0x00,0x10,0x04,0x01,0x00,0x20,0x04,
        0x01,0x00,0x50,0x04,0x01,0x00,0x60,0x04,0x01,0x00,0x70,0x04,0x01,0x00,0x80,0x04,0x01,0x11,0x10,0x02,
        0x01,0x5c,0x01,0x16,0x06,0x00
    },

    //方案十一 总加组脉冲日冻结采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0b,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x19,0x20,0x21,0x02,0x00,0x23,0x01,0x07,0x00,0x23,0x01,
        0x08,0x00,0x23,0x02,0x07,0x00,0x23,0x02,0x08,0x00,0x23,0x03,0x07,0x00,0x23,0x03,0x08,0x00,0x23,0x04,
        0x07,0x00,0x23,0x04,0x08,0x00,0x23,0x05,0x07,0x00,0x23,0x05,0x08,0x00,0x23,0x06,0x07,0x00,0x23,0x06,
        0x08,0x00,0x23,0x07,0x07,0x00,0x23,0x07,0x08,0x00,0x23,0x08,0x07,0x00,0x23,0x08,0x08,0x00,0x24,0x01,
        0x07,0x00,0x24,0x01,0x09,0x00,0x24,0x01,0x0b,0x00,0x24,0x01,0x0d,0x00,0x24,0x02,0x07,0x00,0x24,0x02,
        0x09,0x00,0x24,0x02,0x0b,0x00,0x24,0x02,0x0d,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x03,0x00

        
    },
   //方案四十一 总加组脉冲日冻结采集任务 方案11的延续
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x29,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x19,0x20,0x21,0x02,0x00,0x24,0x03,0x07,0x00,0x24,0x03,
        0x09,0x00,0x24,0x03,0x0b,0x00,0x24,0x03,0x0d,0x00,0x24,0x04,0x07,0x00,0x24,0x04,0x09,0x00,0x24,0x04,
        0x0b,0x00,0x24,0x04,0x0d,0x00,0x24,0x05,0x07,0x00,0x24,0x05,0x09,0x00,0x24,0x05,0x0b,0x00,0x24,0x05,
        0x0d,0x00,0x24,0x06,0x07,0x00,0x24,0x06,0x09,0x00,0x24,0x06,0x0b,0x00,0x24,0x06,0x0d,0x00,0x24,0x07,
        0x07,0x00,0x24,0x07,0x09,0x00,0x24,0x07,0x0b,0x00,0x24,0x07,0x0d,0x00,0x24,0x08,0x07,0x00,0x24,0x08,
        0x09,0x00,0x24,0x08,0x0b,0x00,0x24,0x08,0x0d,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x03,0x00
    },

    //方案十二 总加组脉冲  月冻结采集任务
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0c,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x11,0x20,0x21,0x02,0x00,0x23,0x01,0x09,0x00,0x23,0x01,
        0x0a,0x00,0x23,0x02,0x09,0x00,0x23,0x02,0x0a,0x00,0x23,0x03,0x09,0x00,0x23,0x03,0x0a,0x00,0x23,0x04,
        0x09,0x00,0x23,0x04,0x0a,0x00,0x23,0x05,0x09,0x00,0x23,0x05,0x0a,0x00,0x23,0x06,0x09,0x00,0x23,0x06,
        0x0a,0x00,0x23,0x07,0x09,0x00,0x23,0x07,0x0a,0x00,0x23,0x08,0x09,0x00,0x23,0x08,0x0a,0x00,0x5c,0x04,
        0x01,0x00,0x01,0x16,0x07,0x00

    },
   //方案四十二 总加组脉冲  月冻结采集任务 方案12的延续
    {
        0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x2a,0x12,0x00,0x1f,0x02,0x02,0x11,0x02,
        0x00,0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x21,0x20,0x21,0x02,0x00,0x24,0x01,0x08,0x00,0x24,0x01,
        0x0a,0x00,0x24,0x01,0x0c,0x00,0x24,0x01,0x0e,0x00,0x24,0x02,0x08,0x00,0x24,0x02,0x0a,0x00,0x24,0x02,
        0x0c,0x00,0x24,0x02,0x0e,0x00,0x24,0x03,0x08,0x00,0x24,0x03,0x0a,0x00,0x24,0x03,0x0c,0x00,0x24,0x03,
        0x0e,0x00,0x24,0x04,0x08,0x00,0x24,0x04,0x0a,0x00,0x24,0x04,0x0c,0x00,0x24,0x04,0x0e,0x00,0x24,0x05,
        0x08,0x00,0x24,0x05,0x0a,0x00,0x24,0x05,0x0c,0x00,0x24,0x05,0x0e,0x00,0x24,0x06,0x08,0x00,0x24,0x06,
        0x0a,0x00,0x24,0x06,0x0c,0x00,0x24,0x06,0x0e,0x00,0x24,0x07,0x08,0x00,0x24,0x07,0x0a,0x00,0x24,0x07,
        0x0c,0x00,0x24,0x07,0x0e,0x00,0x24,0x08,0x08,0x00,0x24,0x08,0x0a,0x00,0x24,0x08,0x0c,0x00,0x24,0x08,
        0x0e,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x07,0x00
    },
    //方案十三 总加组脉冲  15分钟曲线采集任务
    {
        0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0d,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x21,0x20,0x21,0x02,0x00,0x23,0x01,0x03,
        0x00,0x23,0x01,0x04,0x00,0x23,0x01,0x07,0x00,0x23,0x01,0x08,0x00,0x23,0x02,0x03,0x00,0x23,0x02,0x04,
        0x00,0x23,0x02,0x07,0x00,0x23,0x02,0x08,0x00,0x23,0x03,0x03,0x00,0x23,0x03,0x04,0x00,0x23,0x03,0x07,
        0x00,0x23,0x03,0x08,0x00,0x23,0x04,0x03,0x00,0x23,0x04,0x04,0x00,0x23,0x04,0x07,0x00,0x23,0x04,0x08,
        0x00,0x23,0x05,0x03,0x00,0x23,0x05,0x04,0x00,0x23,0x05,0x07,0x00,0x23,0x05,0x08,0x00,0x23,0x06,0x03,
        0x00,0x23,0x06,0x04,0x00,0x23,0x06,0x07,0x00,0x23,0x06,0x08,0x00,0x23,0x07,0x03,0x00,0x23,0x07,0x04,
        0x00,0x23,0x07,0x07,0x00,0x23,0x07,0x08,0x00,0x23,0x08,0x03,0x00,0x23,0x08,0x04,0x00,0x23,0x08,0x07,
        0x00,0x23,0x08,0x08,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x06,0x00
    },
    //方案四十三 总加组脉冲  15分钟曲线采集任务 方案13的延续
    {
        0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x2b,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x1d,0x20,0x21,0x02,0x00,0x24,0x01,0x05,
        0x00,0x24,0x01,0x06,0x00,0x24,0x01,0x07,0x00,0x24,0x01,0x09,0x00,0x24,0x01,0x0b,0x00,0x24,0x01,0x0d,
        0x00,0x24,0x01,0x0f,0x00,0x24,0x02,0x05,0x00,0x24,0x02,0x06,0x00,0x24,0x02,0x07,0x00,0x24,0x02,0x09,
        0x00,0x24,0x02,0x0b,0x00,0x24,0x02,0x0d,0x00,0x24,0x02,0x0f,0x00,0x24,0x03,0x05,0x00,0x24,0x03,0x06,
        0x00,0x24,0x03,0x07,0x00,0x24,0x03,0x09,0x00,0x24,0x03,0x0b,0x00,0x24,0x03,0x0d,0x00,0x24,0x03,0x0f,
        0x00,0x24,0x04,0x05,0x00,0x24,0x04,0x06,0x00,0x24,0x04,0x07,0x00,0x24,0x04,0x09,0x00,0x24,0x04,0x0b,
        0x00,0x24,0x04,0x0d,0x00,0x24,0x04,0x0f,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x06,0x00

    },
    //方案五十三 总加组脉冲  15分钟曲线采集任务 方案13的延续
    {
        0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x35,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,
        0x54,0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x1d,0x20,0x21,0x02,0x00,0x24,0x05,0x05,
        0x00,0x24,0x05,0x06,0x00,0x24,0x05,0x07,0x00,0x24,0x05,0x09,0x00,0x24,0x05,0x0b,0x00,0x24,0x05,0x0d,
        0x00,0x24,0x05,0x0f,0x00,0x24,0x06,0x05,0x00,0x24,0x06,0x06,0x00,0x24,0x06,0x07,0x00,0x24,0x06,0x09,
        0x00,0x24,0x06,0x0b,0x00,0x24,0x06,0x0d,0x00,0x24,0x06,0x0f,0x00,0x24,0x07,0x05,0x00,0x24,0x07,0x06,
        0x00,0x24,0x07,0x07,0x00,0x24,0x07,0x09,0x00,0x24,0x07,0x0b,0x00,0x24,0x07,0x0d,0x00,0x24,0x07,0x0f,
        0x00,0x24,0x08,0x05,0x00,0x24,0x08,0x06,0x00,0x24,0x08,0x07,0x00,0x24,0x08,0x09,0x00,0x24,0x08,0x0b,
        0x00,0x24,0x08,0x0d,0x00,0x24,0x08,0x0f,0x00,0x5c,0x04,0x01,0x00,0x01,0x16,0x06,0x00

    },

	//方案14 1分钟功率曲线采集任务
    {
        0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0e,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
		0x01,0x00,0x01,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x21,0x20,0x21,0x02,0x00,0x23,0x01,0x03,0x00,0x23,
		0x01,0x04,0x00,0x23,0x02,0x03,0x00,0x23,0x02,0x04,0x00,0x23,0x03,0x03,0x00,0x23,0x03,0x04,0x00,0x23,0x04,
		0x03,0x00,0x23,0x04,0x04,0x00,0x23,0x05,0x03,0x00,0x23,0x05,0x04,0x00,0x23,0x06,0x03,0x00,0x23,0x06,0x04,
		0x00,0x23,0x07,0x03,0x00,0x23,0x07,0x04,0x00,0x23,0x08,0x03,0x00,0x23,0x08,0x04,0x00,0x24,0x01,0x05,0x00,
		0x24,0x01,0x06,0x00,0x24,0x02,0x05,0x00,0x24,0x02,0x06,0x00,0x24,0x03,0x05,0x00,0x24,0x03,0x06,0x00,0x24,
		0x04,0x05,0x00,0x24,0x04,0x06,0x00,0x24,0x05,0x05,0x00,0x24,0x05,0x06,0x00,0x24,0x06,0x05,0x00,0x24,0x06,
		0x06,0x00,0x24,0x07,0x05,0x00,0x24,0x07,0x06,0x00,0x24,0x08,0x05,0x00,0x24,0x08,0x06,0x00,0x5c,0x04,0x01,
		0x00,0x01,0x16,0x06,0x00

    },

};
const uint16 actDefaultNormalSchLen[] = 
{
    139, //方案1
    
    166, //方案2
    118,//方案32
    
    99, //方案3
    
    119, //方案4
    107, //方案34

    
    88,  //方案5
    81, //方案6
    82, //方案7
    66,  //方案8
   
    138,  //方案11
    138,  //方案41

    
    102,  //方案12
    170,  //方案42

    
    173,  //方案13
    157,  //方案43
    155,  //方案53

	173,  //方案14

};
const uint32 actDefaultNormalSchNum = sizeof(actDefaultNormalSch)/LOCAL_RECV_FRAM_MAXLEN;

// 事件方案，列出APDU，长度，数量
const uint8 actDefaultEventSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //1级事件采集任务
    
    {0x07,0x01,0x27,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x01,0x02,0x02,0x11,0x00,0x01,0x06,0x52,0x30,
     0x05,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x05,0x08,0x00,
     0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x05,0x09,0x00,0x03,0x20,0x1e,
     0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1b,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
     0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x11,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
     0x20,0x22,0x02,0x00,0x52,0x30,0x13,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
     0x00,0x5c,0x01,0x03,0x01,0x12,0x00,0x40,0x00},
     //2级事件日采集任务
    {0x07,0x01,0x28,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x02,0x02,0x02,0x11,0x00,0x01,0x01,0x52,0x30,
     0x2c,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x5c,0x01,0x03,0x00,0x12,
     0x00,0x40,0x00},
     //3级事件月采集任务
    {0x07,0x01,0x2b,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x03,0x02,0x02,0x11,0x00,0x01,0x13,0x52,0x30,
    0x00,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x00,0x08,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x00,0x09,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x52,0x30,0x01,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
    0x00,0x52,0x30,0x02,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,
    0x02,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x02,0x09,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x07,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x03,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x52,0x30,0x04,0x07,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
    0x00,0x52,0x30,0x04,0x08,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,
    0x04,0x09,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x0f,0x02,0x00,
    0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x16,0x02,0x00,0x03,0x20,0x1e,
    0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1c,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,
    0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x1d,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
    0x20,0x22,0x02,0x00,0x5c,0x01,0x03,0x00,0x12,0x00,0x40,0x00},
    
};
const uint16 actDefaultEventSchLen[] = 
{
    135,
    45,
    369,
};
const uint32 actDefaultEventSchNum = sizeof(actDefaultEventSch)/LOCAL_RECV_FRAM_MAXLEN;


// 任务，列出APDU，长度，数量
const uint8 actDefaultTask[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //任务1
    {0x07, 0x01, 0x05, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x01, 0x54, 0x01, 0x00, 0x05, 0x16, 0x01, 0x11, 0x01, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务2
    {0x07, 0x01, 0x06, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x02, 0x54, 0x01, 0x00, 0x0f, 0x16, 0x01, 0x11, 0x02, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务32
    {0x07, 0x01, 0x06, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x20, 0x54, 0x01, 0x00, 0x0f, 0x16, 0x01, 0x11, 0x20, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务3 日冻结加10分钟延时
    {
        0x07,0x01,0x07,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x03,0x54,0x03,0x00,0x01,0x16,0x01,0x11,
        0x03,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x0a,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
    //任务4
    {
        0x07,0x01,0x08,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x04,0x54,0x03,0x00,0x01,0x16,0x01,0x11,
        0x04,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },
     //任务34
    {
        0x07,0x01,0x08,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x22,0x54,0x03,0x00,0x01,0x16,0x01,0x11,
        0x22,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },
    //任务5
    {
        0x07,0x01,0x09,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x05,0x54,0x04,0x00,0x01,0x16,0x01,0x11,
        0x05,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x0a,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },
    //任务6
    {
        0x07,0x01,0x0a,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x06,0x54,0x01,0x00,0x05,0x16,0x01,0x11,
        0x06,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },
   //任务7
    {
        0x07,0x01,0x0b,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x07,0x54,0x01,0x00,0x0f,0x16,0x01,0x11,
        0x07,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },    
    //任务8
    {
        0x07,0x01,0x0c,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x08,0x54,0x01,0x00,0x0f,0x16,0x01,0x11,
        0x08,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },     
    //任务11
    {
        0x07,0x01,0x0f,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x0b,0x54,0x03,0x00,0x01,0x16,0x01,0x11,
        0x0b,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },    
    //任务41
    {
        0x07,0x01,0x0f,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x29,0x54,0x03,0x00,0x01,0x16,0x01,0x11,
        0x29,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },    
    
    //任务12
    {
        0x07,0x01,0x10,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x0c,0x54,0x04,0x00,0x01,0x16,0x01,0x11,
        0x0c,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },   
    //任务42
    {
        0x07,0x01,0x10,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x2a,0x54,0x04,0x00,0x01,0x16,0x01,0x11,
        0x2a,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
    },    

    //任务13
    {
        0x07,0x01,0x10,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x0d,0x54,0x01,0x00,0x0f,0x16,0x01,0x11,
        0x0d,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    }, 
    //任务43
    {
        0x07,0x01,0x10,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x2b,0x54,0x01,0x00,0x0f,0x16,0x01,0x11,
        0x2b,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },    
    //任务53
    {
        0x07,0x01,0x10,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x35,0x54,0x01,0x00,0x0f,0x16,0x01,0x11,
        0x35,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00    
    },
    
    //任务14      事件任务
    {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x0e,0x54,0x01,0x00,0x0f,0x16,0x02,0x11,
        0x01,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },   
    //任务15
    {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x0f,0x54,0x03,0x00,0x01,0x16,0x02,0x11,
        0x02,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
    },
    //任务16
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x10,0x54,0x04,0x00,0x01,0x16,0x02,0x11,
        0x03,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务17
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x11,0x54,0x01,0x00,0x01,0x16,0x01,0x11,
        0x0e,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务18
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x12,0x54,0x03,0x00,0x01,0x16,0x04,0x11,
        0x01,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x1e,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务19
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x13,0x54,0x04,0x00,0x01,0x16,0x04,0x11,
        0x02,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x2d,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务20
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x14,0x54,0x01,0x00,0x05,0x16,0x04,0x11,
        0x03,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x02,0x11,0x02,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务21上报方案4
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x15,0x54,0x01,0x00,0x0f,0x16,0x04,0x11,
        0x04,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x02,0x11,0x02,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

  //任务22 上报方案5
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x16,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x05,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x02,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00
   },

	//任务23 上报方案6
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x17,0x54,0x03,0x00,0x01,0x16,0x04,0x11,
        0x06,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x02,0x00,
        0x02,0x11,0x04,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },

	//任务24
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x18,0x54,0x04,0x00,0x01,0x16,0x04,0x11,
        0x07,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x96,0x11,0x04,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },

	//任务25
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x19,0x54,0x03,0x00,0x01,0x16,0x04,0x11,
        0x08,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x96,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00

   },

   //任务26
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x1A,0x54,0x04,0x00,0x01,0x16,0x04,0x11,
        0x09,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x2d,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },
	//任务36
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x20,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x13,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x2d,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },
	//任务27
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x1b,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x0a,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x02,0x11,0x02,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },

	//任务37
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x21,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x14,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
        0x02,0x11,0x02,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },

	//任务28
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x1c,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x0b,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x00,0x00,
        0x05,0x11,0x03,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00
   },

	//任务38
   {
        0x07,0x01,0x13,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x22,0x54,0x01,0x00,0x01,0x16,0x04,0x11,
        0x15,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x00,0x00,
        0x05,0x11,0x03,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
        0x00,0x11,0x0f,0x11,0x17,0x11,0x3b,0x00

   },
   
};
const uint16 actDefaultTaskLen[] = 
{
    68, //任务1
    68, //任务2
    68, //任务32
    68, //任务3
    68, //任务4
    68, //任务34
    68, //任务5
    68, //任务6
    68, //任务7
    68, //任务8
    68, //任务11
    68, //任务41
    68, //任务12
    68, //任务42
    68, //任务13
    68, //任务43
    68, //任务53
    68, //任务14
    68, //任务15
    68, //任务16
    68, //任务17
    68, //任务18
    68, //任务19
    68, //任务20
    68, //任务21
	68, //任务22
    68, //任务23
    68, //任务24
    68, //任务25
	68, //任务26
    68, //任务36
    68, //任务27
    68, //任务37
    68, //任务28
    68, //任务38
};

const uint32 actDefaultTaskNum = sizeof(actDefaultTask)/LOCAL_RECV_FRAM_MAXLEN;


// 上报方案，列出APDU，长度，数量
const uint8 actDefaultRptSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //上报方案1
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x01,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x04,0x02,0x00,0x10,0x20,0x21,0x02,
	0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,
	0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,0x02,0x00,0x10,
	0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x21,0x31,
	0x02,0x01,0x21,0x32,0x02,0x01,0x21,0x33,0x02,0x01,0x5a,0x0a,0x01,0x04,0x01,0x00,0x01,0x00},

	//上报方案3
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x03,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x06,0x02,0x00,0x0d,0x20,0x21,0x02,
	0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,
	0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,0x02,0x00,0x10,
	0x10,0x02,0x00,0x10,0x20,0x02,0x00,0x10,0x30,0x02,0x00,0x10,0x40,0x02,0x00,0x5a,0x0a,
	0x01,0x04,0x01,0x00,0x01,0x00},

	//上报方案4
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x04,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x09,0x20,0x21,0x02,
	0x00,0x00,0x10,0x02,0x01,0x00,0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,
	0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x5a,
	0x0a,0x02,0x04,0x01,0x00,0x01,0x00},

	//上报方案5
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x05,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x0c,0x20,0x21,0x02,
	0x00,0x00,0x10,0x02,0x01,0x00,0x20,0x02,0x01,0x00,0x50,0x02,0x01,0x00,0x60,0x02,0x01,
	0x00,0x70,0x02,0x01,0x00,0x80,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,
	0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x2a,0x02,0x00,0x5a,0x0a,0x02,0x04,0x01,0x00,0x01,0x00},


	//上报方案6
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x06,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x08,0x20,0x21,0x02,
	0x00,0x00,0x10,0x04,0x01,0x00,0x20,0x04,0x01,0x00,0x50,0x04,0x01,0x00,0x60,0x04,0x01,
	0x00,0x70,0x04,0x01,0x00,0x80,0x04,0x01,0x11,0x10,0x04,0x01,0x5a,0x0a,0x02,0x04,0x01,
	0x00,0x01,0x00},
	//上报方案9
    {
    0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x09,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x04,0x02,0x00,0x19,0x20,0x21,0x02,
	0x00,0x23,0x01,0x07,0x00,0x23,0x01,0x08,0x00,0x23,0x02,0x07,0x00,0x23,0x02,0x08,0x00,
	0x23,0x03,0x07,0x00,0x23,0x03,0x08,0x00,0x23,0x04,0x07,0x00,0x23,0x04,0x08,0x00,0x23,
	0x05,0x07,0x00,0x23,0x05,0x08,0x00,0x23,0x06,0x07,0x00,0x23,0x06,0x08,0x00,0x23,0x07,
	0x07,0x00,0x23,0x07,0x08,0x00,0x23,0x08,0x07,0x00,0x23,0x08,0x08,0x00,0x24,0x01,0x07,
	0x00,0x24,0x01,0x09,0x00,0x24,0x01,0x0B,0x00,0x24,0x01,0x0D,0x00,0x24,0x02,0x07,0x00,
	0x24,0x02,0x09,0x00,0x24,0x02,0x0B,0x00,0x24,0x02,0x0D,0x00,0x5a,0x0a,0x01,0x04,0x01,
	0x00,0x01,0x00
	},
	//上报方案19跟着上报方案9
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x13,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x04,0x02,0x00,0x19,0x20,0x21,0x02,
	0x00,0x24,0x03,0x07,0x00,0x24,0x03,0x09,0x00,0x24,0x03,0x0B,0x00,0x24,0x03,0x0D,0x00,
	0x24,0x04,0x07,0x00,0x24,0x04,0x09,0x00,0x24,0x04,0x0B,0x00,0x24,0x04,0x0D,0x00,0x24,
	0x05,0x07,0x00,0x24,0x05,0x09,0x00,0x24,0x05,0x0B,0x00,0x24,0x05,0x0D,0x00,0x24,0x06,
	0x07,0x00,0x24,0x06,0x09,0x00,0x24,0x06,0x0B,0x00,0x24,0x06,0x0D,0x00,0x24,0x07,0x07,
	0x00,0x24,0x07,0x09,0x00,0x24,0x07,0x0B,0x00,0x24,0x07,0x0D,0x00,0x24,0x08,0x07,0x00,
	0x24,0x08,0x09,0x00,0x24,0x08,0x0B,0x00,0x24,0x08,0x0D,0x00,0x5a,0x0a,0x01,0x04,0x01,
	0x00,0x01,0x00
	},
	//方案10
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x0A,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x06,0x02,0x00,0x19,0x20,0x21,0x02,
	0x00,0x23,0x01,0x09,0x00,0x23,0x01,0x0A,0x00,0x23,0x02,0x09,0x00,0x23,0x02,0x0A,0x00,
	0x23,0x03,0x09,0x00,0x23,0x03,0x0A,0x00,0x23,0x04,0x09,0x00,0x23,0x04,0x0A,0x00,0x23,
	0x05,0x09,0x00,0x23,0x05,0x0A,0x00,0x23,0x06,0x09,0x00,0x23,0x06,0x0A,0x00,0x23,0x07,
	0x09,0x00,0x23,0x07,0x0A,0x00,0x23,0x08,0x09,0x00,0x23,0x08,0x0A,0x00,0x24,0x01,0x08,
	0x00,0x24,0x01,0x0A,0x00,0x24,0x01,0x0C,0x00,0x24,0x01,0x0E,0x00,0x24,0x02,0x08,0x00,
	0x24,0x02,0x0A,0x00,0x24,0x02,0x0C,0x00,0x24,0x02,0x0E,0x00,0x5a,0x0a,0x01,0x04,0x01,
	0x00,0x01,0x00
	},
	//方案20接着上报方案10
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x14,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x06,0x02,0x00,0x19,0x20,0x21,0x02,
	0x00,0x24,0x03,0x08,0x00,0x24,0x03,0x0A,0x00,0x24,0x03,0x0C,0x00,0x24,0x03,0x0E,0x00,
	0x24,0x04,0x08,0x00,0x24,0x04,0x0A,0x00,0x24,0x04,0x0C,0x00,0x24,0x04,0x0E,0x00,0x24,
	0x05,0x08,0x00,0x24,0x05,0x0A,0x00,0x24,0x05,0x0C,0x00,0x24,0x05,0x0E,0x00,0x24,0x06,
	0x08,0x00,0x24,0x06,0x0A,0x00,0x24,0x06,0x0C,0x00,0x24,0x06,0x0E,0x00,0x24,0x07,0x08,
	0x00,0x24,0x07,0x0A,0x00,0x24,0x07,0x0C,0x00,0x24,0x07,0x0E,0x00,0x24,0x08,0x08,0x00,
	0x24,0x08,0x0A,0x00,0x24,0x08,0x0C,0x00,0x24,0x08,0x0E,0x00,0x5a,0x0a,0x01,0x04,0x01,
	0x00,0x01,0x00
	},

	//方案11
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x0b,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x1b,0x20,0x21,0x02,
	0x00,0x23,0x01,0x07,0x00,0x23,0x01,0x08,0x00,0x23,0x02,0x07,0x00,0x23,0x02,0x08,0x00,
	0x23,0x03,0x07,0x00,0x23,0x03,0x08,0x00,0x23,0x04,0x07,0x00,0x23,0x04,0x08,0x00,0x23,
	0x05,0x07,0x00,0x23,0x05,0x08,0x00,0x23,0x06,0x07,0x00,0x23,0x06,0x08,0x00,0x23,0x07,
	0x07,0x00,0x23,0x07,0x08,0x00,0x23,0x08,0x07,0x00,0x23,0x08,0x08,0x00,0x24,0x01,0x07,
	0x00,0x24,0x01,0x09,0x00,0x24,0x01,0x0B,0x00,0x24,0x01,0x0D,0x00,0x24,0x01,0x0e,0x00,
	0x24,0x02,0x07,0x00,0x24,0x02,0x09,0x00,0x24,0x02,0x0B,0x00,0x24,0x02,0x0D,0x00,0x24,
	0x02,0x0e,0x00,0x5a,0x0a,0x02,0x04,0x01,0x00,0x01,0x00

	},
	//方案21接着方案11
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x15,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x1f,0x20,0x21,0x02,
	0x00,0x24,0x03,0x07,0x00,0x24,0x03,0x09,0x00,0x24,0x03,0x0B,0x00,0x24,0x03,0x0D,0x00,
	0x24,0x03,0x0e,0x00,0x24,0x04,0x07,0x00,0x24,0x04,0x09,0x00,0x24,0x04,0x0B,0x00,0x24,
	0x04,0x0D,0x00,0x24,0x04,0x0e,0x00,0x24,0x05,0x07,0x00,0x24,0x05,0x09,0x00,0x24,0x05,
	0x0B,0x00,0x24,0x05,0x0D,0x00,0x24,0x05,0x0e,0x00,0x24,0x06,0x07,0x00,0x24,0x06,0x09,
	0x00,0x24,0x06,0x0B,0x00,0x24,0x06,0x0D,0x00,0x24,0x06,0x0e,0x00,0x24,0x07,0x07,0x00,
	0x24,0x07,0x09,0x00,0x24,0x07,0x0B,0x00,0x24,0x07,0x0D,0x00,0x24,0x07,0x0e,0x00,0x24,
	0x08,0x07,0x00,0x24,0x08,0x09,0x00,0x24,0x08,0x0B,0x00,0x24,0x08,0x0D,0x00,0x24,0x08,
	0x0e,0x00,0x5a,0x0a,0x02,0x04,0x01,0x00,0x01,0x00
	},
	//上报方案12
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x0c,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x11,0x20,0x21,0x02,
	0x00,0x23,0x01,0x03,0x00,0x23,0x01,0x04,0x00,0x23,0x02,0x03,0x00,0x23,0x02,0x04,0x00,
	0x23,0x03,0x03,0x00,0x23,0x03,0x04,0x00,0x23,0x04,0x03,0x00,0x23,0x04,0x04,0x00,0x23,
	0x05,0x03,0x00,0x23,0x05,0x04,0x00,0x23,0x06,0x03,0x00,0x23,0x06,0x04,0x00,0x23,0x07,
	0x03,0x00,0x23,0x07,0x04,0x00,0x23,0x08,0x03,0x00,0x23,0x08,0x04,0x00,0x5a,0x0a,0x01,
	0x04,0x01,0x00,0x01,0x00
	},
	//上报方案22接着12
	{
	0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x16,0x01,0x01,0x51,0x45,
	0x00,0x02,0x00,0x54,0x00,0x00,0x1e,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,
	0x12,0x03,0x00,0x60,0x05,0x00,0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,
	0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,0x50,0x02,0x02,0x00,0x11,0x20,0x21,0x02,
	0x00,0x24,0x01,0x05,0x00,0x24,0x01,0x06,0x00,0x24,0x02,0x05,0x00,0x24,0x02,0x06,0x00,
	0x24,0x03,0x05,0x00,0x24,0x03,0x06,0x00,0x24,0x04,0x05,0x00,0x24,0x04,0x06,0x00,0x24,
	0x05,0x05,0x00,0x24,0x05,0x06,0x00,0x24,0x06,0x05,0x00,0x24,0x06,0x06,0x00,0x24,0x07,
	0x05,0x00,0x24,0x07,0x06,0x00,0x24,0x08,0x05,0x00,0x24,0x08,0x06,0x00,0x5a,0x0a,0x01,
	0x04,0x01,0x00,0x01,0x00
	}
};

const uint16 actDefaultRptSchLen[] = 
{
    137, //上报方案1
    125, //上报方案3
    109, //上报方案4
    121, //上报方案5
    105, //上报方案6
    173, //上报方案9
    173, //上报方案19
    173, //上报方案10
    173, //上报方案20
    181,  //上报方案11
    197,  //上报方案21
    141,  //上报方案12
    141, //上报方案22
};
const uint32 actDefaultRptSchNum = sizeof(actDefaultRptSch)/LOCAL_RECV_FRAM_MAXLEN;


const uint8 actDefaultPara[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    {0x06, 0x01, 0x00, 0x43, 0x00, 0x08, 0x00, 0x03, 0x01, 0x00},    //允许上报
    {0x06, 0x01, 0x01, 0x31, 0x00, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31000900
    {0x06, 0x01, 0x02, 0x31, 0x00, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31000800
    {0x06, 0x01, 0x01, 0x31, 0x01, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31010900
    {0x06, 0x01, 0x02, 0x31, 0x01, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31010800
    {0x06, 0x01, 0x01, 0x31, 0x1e, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x311e0900 参数变更事件
    {0x06, 0x01, 0x01, 0x31, 0x04, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31040900 状态量变位事件
    {0x06, 0x01, 0x01, 0x31, 0x15, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31150900
    {0x06, 0x01, 0x02, 0x31, 0x15, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31150800
    {0x06, 0x01, 0x01, 0x32, 0x00, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x32000900
    {0x06, 0x01, 0x02, 0x32, 0x00, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x32000800
    {0x06, 0x01, 0x01, 0x32, 0x01, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x32010900
    {0x06, 0x01, 0x02, 0x32, 0x01, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x32010800
    {0x06, 0x01, 0x01, 0x31, 0x05, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31050900
    {0x06, 0x01, 0x02, 0x31, 0x05, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31050800
    {0x06, 0x01, 0x01, 0x31, 0x05, 0x06, 0x00, 0x02, 0x02, 0x12, 0x01, 0x2c, 0x11, 0x02, 0x00}, //时钟超差事件默认阈值5分钟(300s),关联任务2
    {0x06, 0x01, 0x01, 0x31, 0x06, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31060900
    {0x06, 0x01, 0x02, 0x31, 0x06, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31060800
    {0x06,0x01,0x15,0x31,0x06,0x06,0x00,0x02,0x02,0x02,0x04,0x04,0x08,0x00,0x11,0x00,0x11,0x05,
     0x01,0x00,0x02,0x06,0x12,0x00,0x01,0x12,0x10,0xe0,0x12,0x00,0x05,0x12,0x00,0x04,0x12,0x00,
     0x84,0x12,0x00,0xb0,0x00}, //31060600
    {0x06, 0x01, 0x01, 0x32, 0x02, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x32020900
    {0x06, 0x01, 0x02, 0x32, 0x02, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x32020800
    {0x06, 0x01, 0x01, 0x32, 0x03, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x32030900
    {0x06, 0x01, 0x02, 0x32, 0x03, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x32030800
    {0x06, 0x01, 0x01, 0x31, 0x17, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31170900
    {0x06, 0x01, 0x02, 0x31, 0x17, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31170800
    {0x06, 0x01, 0x01, 0x30, 0x2e, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x302e0900
    {0x06, 0x01, 0x02, 0x30, 0x2e, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x302e0800

};
const uint16 actDefaultParaLen[] =
{
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    15,
    10,
    10,
    41,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
};
const uint32 actDefaultParaNum = sizeof(actDefaultPara)/LOCAL_RECV_FRAM_MAXLEN;

const GRPS_PARAM_T gGprsParam[] =
{
    {0,0,{10,101,1,190},35200,{10,101,1,189},35200,"jsepc.js","",""},
    {0,2,{10,101,1,190},35200,{10,101,1,189},35200,"jsepc4g.js","",""},
    {2,2,{8,0,0,11},    35200,{8,0,0,10},    35200,"jssdlgs.wxcb.jsapn","",""},
    {1,2,{9,0,1,5},     35200,{9,0,1,6},     35200,"private.vpdn","jsepc@jsepc.vpdn.js","jsepc123"},
};

/**********************************************************************
* @name      : apn_group_default_set
* @brief     ：江苏设置默认的主站参数 如果多网络参数没有配置 则设置到多网络参数中
* @param[in] ：
* @param[out]：apnGroup  多网络参数
* @return    ：
**********************************************************************/

void apn_group_default_set(OOP_APNGROUP_T *apnGroup)
{
    uint8 i,num;
    OOP_APNGROUP_T data;
    memset(&data,0x00,sizeof(OOP_APNGROUP_T));

    num = sizeof(gGprsParam)/sizeof(GRPS_PARAM_T);
    for(i = 0;i<num;i++)
    {
        data.net[i].factory = gGprsParam[i].factory;
        data.net[i].network = gGprsParam[i].network;
        data.net[i].apn.apn.nNum = strlen(gGprsParam[i].apn);
        strcpy(data.net[i].apn.apn.value,gGprsParam[i].apn);
        data.net[i].apn.username.nNum = strlen(gGprsParam[i].username);
        strcpy(data.net[i].apn.username.value,gGprsParam[i].username);
        data.net[i].apn.pwd.nNum = strlen(gGprsParam[i].password);
        strcpy(data.net[i].apn.pwd.value,gGprsParam[i].password);
        data.net[i].auth = 0xff;    //自适应
        data.net[i].master.nNum = 2;
        memcpy(data.net[i].master.master[0].ip,gGprsParam[i].ip1,4);
        data.net[i].master.master[0].port  = gGprsParam[i].port1;
        memcpy(data.net[i].master.master[1].ip,gGprsParam[i].ip2,4);
        data.net[i].master.master[1].port  = gGprsParam[i].port2;
    }
    data.nNum = num;
    if(apnGroup)
    {
        memcpy(apnGroup,&data,sizeof(OOP_APNGROUP_T));
    }
}

#endif

//将上面的几个变量填入下表，即可下发默认配置
const APDU_DEF_CFG_T apduDefCfgList[] = 
{
    /* 使用SET(0)还是ACT(1)服务 APDU                           APDULEN                          APDUNUM*/
    //{0,                         (uint8 *)setDefaultPara,      (uint16 *)setDefaultParaLen,      (uint32 *)&setDefaultParaNum},
    {1,                         (uint8 *)actDefaultNormalSch, (uint16 *)actDefaultNormalSchLen, (uint32 *)&actDefaultNormalSchNum},
    //{1,                         (uint8 *)actDefaultRptSch,    (uint16 *)actDefaultRptSchLen,    (uint32 *)&actDefaultRptSchNum},
    {1,                         (uint8 *)actDefaultEventSch,  (uint16 *)actDefaultEventSchLen,  (uint32 *)&actDefaultEventSchNum},
    {1,                         (uint8 *)actDefaultTask,      (uint16 *)actDefaultTaskLen,      (uint32 *)&actDefaultTaskNum},
#ifdef ADV_ST_AMR
    {0,                         (uint8 *)actDefaultPara,      (uint16 *)actDefaultParaLen,      (uint32 *)&actDefaultParaNum},
#endif
    {0xFF,                      NULL,                          NULL,                            NULL},
};




/**********************************************************************
* @name      : set_by_protocol_eare
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_by_protocol_eare(int sockdbfd, uint8 *pSetDefaultApdu, uint16 *pSetDefaultLen, uint32 setDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pSetDefaultApdu == NULL) || (pSetDefaultLen == NULL) || (setDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("set_by_protocol_eare para err pSetDefaultApdu[%p] pSetDefaultLen[%p] setDefaultNum[%d]\n", pSetDefaultApdu, pSetDefaultLen, setDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < setDefaultNum; i++)
    {
        memcpy(apduBuf, &pSetDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_set_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pSetDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&apduBuf[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare ok output apdu:");
            }
            
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pSetDefaultLen[i], "set_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : actDefaultPara_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void act_by_protocol_eare(int sockdbfd, uint8 *pActDefaultApdu, uint16 *pActDefaultLen, uint32 actDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pActDefaultApdu == NULL) || (pActDefaultLen == NULL) || (actDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("act_by_protocol_eare para err pActDefaultApdu[%p] pActDefaultLen[%p] actDefaultNum[%d]\n", pActDefaultApdu, pActDefaultLen, actDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < actDefaultNum; i++)
    {
        memcpy(apduBuf, &pActDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_act_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pActDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare ok output apdu:");
            }
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pActDefaultLen[i], "act_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : set_act_by_protocol_anhui
* @brief     ：进程启动 统一接口
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_act_by_protocol_jiangsu(int sockdbfd)
{
    uint32 i = 0;
    uint32 num = 0;

    for (i = 0; i < APDU_DEF_CFG_MAX; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0xff)
        {
            break;
        }
    }

    if (i == APDU_DEF_CFG_MAX)
    {
        PRTL_FMT_DEBUG("find no 0xFF\n");
        return;
    }

    num = i;

    for (i = 0; i < num; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0x00)
        {
            set_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
        else if(apduDefCfgList[i].ifSetOrAct == 0x01)
        {
            act_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
    }

    return;
}

/**********************************************************************
* @name      : app_set_default_acfile_jiangsu
* @brief     ：江苏设置默认的交采档案
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void app_set_default_acfile_jiangsu(int sockdbfd )
{
    NOMAL_OAD_T NomalOad;
    OOP_METER_T gMeterFile;
    uint8 *paddr= NULL;
    uint8 addrlen;
    int ret;
    memset(&NomalOad,0x00,sizeof(NOMAL_OAD_T));
    NomalOad.logicId = 0;
    NomalOad.oad.value =0x60000200;
    NomalOad.classtag = CLASS_DATA_INIT;
    NomalOad.infoNum = 1;
    
    memset(&gMeterFile,0x00,sizeof(OOP_METER_T));
    gMeterFile.nIndex = 1;
    gMeterFile.basic.port.value= 0xf2080201;
    gMeterFile.basic.protocol = 3;
    gMeterFile.basic.pwrType =3;
    gMeterFile.basic.userType = 98;
    addrlen = app_get_localaddr(&paddr);
    if(addrlen!=0)
    {
        gMeterFile.basic.tsa.len = addrlen-1;
        memcpy(gMeterFile.basic.tsa.add,paddr,addrlen);
    }
    PRTL_BUF_DEBUG(paddr,addrlen, "写入默认交采档案 \n");
    ret = db_write_nomal(sockdbfd,&NomalOad,(uint8*)&gMeterFile,sizeof(gMeterFile));
    if(ret !=0)
    {
        PRTL_FMT_DEBUG( "写入默认交采档案失败 \n");
    }
}

/**********************************************************************
* @name      : app_setdefault_cfg_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void app_setdefault_cfg_jiangsu(int sockdbfd)
{
    set_act_by_protocol_jiangsu(sockdbfd);
    app_set_default_acfile_jiangsu(sockdbfd);
    return;
}


//int froen_real_00100200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00100201, pData->colStoreTm, &ENERGY_T->nValue[0], sizeof(uint32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00100203, pData->colStoreTm, &ENERGY_T->nValue[2], sizeof(uint32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00100205, pData->colStoreTm, &ENERGY_T->nValue[4], sizeof(uint32));
//    }
//    else
//    {
//        cJSON *jData_0010020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0010020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100201, pData->colStoreTm, pData->colEndTm, intv, jData_0010020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0010020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100202, pData->colStoreTm, pData->colEndTm, intv, jData_0010020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0010020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100203, pData->colStoreTm, pData->colEndTm, intv, jData_0010020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0010020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100204, pData->colStoreTm, pData->colEndTm, intv, jData_0010020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0010020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100205, pData->colStoreTm, pData->colEndTm, intv, jData_0010020X);
//    }
//    return 0;
//}
//
//int froen_real_00200200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(ENERGY_T,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00200201, pData->colStoreTm, &ENERGY_T.nValue[0], sizeof(uint32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00200203, pData->colStoreTm, &ENERGY_T.nValue[2], sizeof(uint32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_00200205, pData->colStoreTm, &ENERGY_T.nValue[4], sizeof(uint32));
//    }
//    else
//    {
//        cJSON *jData_0020020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0020020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00200201, pData->colStoreTm, pData->colEndTm, intv, jData_0020020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0020020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00100202, pData->colStoreTm, pData->colEndTm, intv, jData_0020020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0020020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00200203, pData->colStoreTm, pData->colEndTm, intv, jData_0020020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0020020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00200204, pData->colStoreTm, pData->colEndTm, intv, jData_0020020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0020020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300205, pData->colStoreTm, pData->colEndTm, intv, jData_0020020X);
//    }
//    return 0;
//}
//
//
//int froen_real_00300200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0030020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0030020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300201, pData->colStoreTm, pData->colEndTm, intv, jData_0030020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0030020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300202, pData->colStoreTm, pData->colEndTm, intv, jData_0030020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0030020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300203, pData->colStoreTm, pData->colEndTm, intv, jData_0030020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0030020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300204, pData->colStoreTm, pData->colEndTm, intv, jData_0030020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0030020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00300205, pData->colStoreTm, pData->colEndTm, intv, jData_0030020X);
//    }
//    return 0;
//}
//
//int froen_real_00400200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0040020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0040020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00400201, pData->colStoreTm, pData->colEndTm, intv, jData_0040020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0040020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00400202, pData->colStoreTm, pData->colEndTm, intv, jData_0040020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0040020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00400203, pData->colStoreTm, pData->colEndTm, intv, jData_0040020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0040020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00400204, pData->colStoreTm, pData->colEndTm, intv, jData_0040020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0040020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00400205, pData->colStoreTm, pData->colEndTm, intv, jData_0040020X);
//    }
//    return 0;
//}
//
//int froen_real_00500200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0050020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0050020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00500201, pData->colStoreTm, pData->colEndTm, intv, jData_0050020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0050020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00500202, pData->colStoreTm, pData->colEndTm, intv, jData_0050020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0050020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00500203, pData->colStoreTm, pData->colEndTm, intv, jData_0050020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0050020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00500204, pData->colStoreTm, pData->colEndTm, intv, jData_0050020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0050020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00500205, pData->colStoreTm, pData->colEndTm, intv, jData_0050020X);
//    }
//    return 0;
//}
//
//int froen_real_00600200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0060020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0060020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00600201, pData->colStoreTm, pData->colEndTm, intv, jData_0060020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0060020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00600202, pData->colStoreTm, pData->colEndTm, intv, jData_0060020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0060020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00600203, pData->colStoreTm, pData->colEndTm, intv, jData_0060020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0060020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00600204, pData->colStoreTm, pData->colEndTm, intv, jData_0060020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0060020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00600205, pData->colStoreTm, pData->colEndTm, intv, jData_0060020X);
//    }
//    return 0;
//}
//
//int froen_real_00700200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0070020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00700201, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00700202, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00700203, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00700204, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00700205, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//    }
//    return 0;
//}
//
//int froen_real_00800200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_ENERGY_T *ENERGY_T = (OOP_ENERGY_T*)pData->inDataBuf;
//
//    {
//        cJSON *jData_0070020X = NULL;
//        float  temp = 0;
//
//        temp = ENERGY_T->nValue[0] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00800201, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[1] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00800202, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[2] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00800203, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[3] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00800204, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//        
//        temp = ENERGY_T->nValue[4] / 100.0;
//        jData_0070020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x00800205, pData->colStoreTm, pData->colEndTm, intv, jData_0070020X);
//    }
//    return 0;
//}
//
//int froen_real_20000200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_WORD3V_T *WORD3V_T= (OOP_WORD3V_T*)pData->inDataBuf;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(WORD3V_T,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000201, pData->colStoreTm, &WORD3V_T->nValue[0], sizeof(uint16));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000202, pData->colStoreTm, &WORD3V_T->nValue[1], sizeof(uint16));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000203, pData->colStoreTm, &WORD3V_T->nValue[2], sizeof(uint16));
//    }
//    else
//    {
//        cJSON *jData_2000020X = NULL;
//        float  temp = 0;
//
//        temp = WORD3V_T->nValue[0] / 10.0;
//        jData_2000020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x20000201, pData->colStoreTm, pData->colEndTm, intv, jData_2000020X);
//        
//        temp = WORD3V_T->nValue[1] / 10.0;
//        jData_2000020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x20000202, pData->colStoreTm, pData->colEndTm, intv, jData_2000020X);
//        
//        temp = WORD3V_T->nValue[2] / 10.0;
//        jData_2000020X = cJSON_CreateNumber(temp);
//        min_gather_insert_item(pGdate, type, 0x20000203, pData->colStoreTm, pData->colEndTm, intv, jData_2000020X);
//        
//    }
//    return 0;
//}
//
//int froen_real_20010200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_INT3V_T  INT3V_T;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(INT3V_T,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000201, pData->colStoreTm, &INT3V_T.nValue[0], sizeof(int32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000202, pData->colStoreTm, &INT3V_T.nValue[1], sizeof(int32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20000203, pData->colStoreTm, &INT3V_T.nValue[2], sizeof(int32));
//    }
//    return 0;
//}
//int froen_real_20010400(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    uint16  value;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(value,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20010400, pData->colStoreTm, &value, sizeof(int32));
//        
//    }
//    return 0;
//}
//
//int froen_real_20010500(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    uint16  value;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(value,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20010500, pData->colStoreTm, &value, sizeof(int32));
//        
//    }
//    return 0;
//}
//
//int froen_real_20040200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_INT4V_T  INT4V_T;
//    
//    if(MIN_GATHER_TYPE_REAL == type)
//    {
//        memcpy(INT4V_T,pData->inDataBuf,pData->inDatalen);
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20040201, pData->colStoreTm, &&INT4V_T.nValue[0], sizeof(int32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20040202, pData->colStoreTm, &&INT4V_T.nValue[1], sizeof(int32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20040203, pData->colStoreTm, &&INT4V_T.nValue[2], sizeof(int32));
//        min_gather_insert_data(pGdate, MIN_GATHER_OAD_20040204, pData->colStoreTm, &&INT4V_T.nValue[3], sizeof(int32));
//       
//    }
//    return 0;
//}
//
//int froen_10100200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_DEMAND_T *DEMAND_T = (OOP_DEMAND_T*)pData->inDataBuf;
//    char          tempstr[32] = {0};
//    
//    cJSON *jData_1010020X = NULL;
//    float  temp = 0;
//
//    temp = DEMAND_T->demand[0].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[0].time.year, DEMAND_T->demand[0].time.month,
//                                                      DEMAND_T->demand[0].time.day, DEMAND_T->demand[0].time.hour,
//                                                      DEMAND_T->demand[0].time.minute, DEMAND_T->demand[0].time.second);
//    jData_1010020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1010020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1010020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100201, pData->colStoreTm, pData->colEndTm, intv, jData_1010020X);
//    
//    
//    temp = DEMAND_T->demand[1].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[1].time.year, DEMAND_T->demand[1].time.month,
//                                                      DEMAND_T->demand[1].time.day, DEMAND_T->demand[1].time.hour,
//                                                      DEMAND_T->demand[1].time.minute, DEMAND_T->demand[1].time.second);
//    jData_1010020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1010020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1010020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100202, pData->colStoreTm, pData->colEndTm, intv, jData_1010020X);
//
//    temp = DEMAND_T->demand[2].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[2].time.year, DEMAND_T->demand[2].time.month,
//                                                      DEMAND_T->demand[2].time.day, DEMAND_T->demand[2].time.hour,
//                                                      DEMAND_T->demand[2].time.minute, DEMAND_T->demand[2].time.second);
//    jData_1010020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1010020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1010020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100203, pData->colStoreTm, pData->colEndTm, intv, jData_1010020X);
//
//    temp = DEMAND_T->demand[3].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[3].time.year, DEMAND_T->demand[3].time.month,
//                                                      DEMAND_T->demand[3].time.day, DEMAND_T->demand[3].time.hour,
//                                                      DEMAND_T->demand[3].time.minute, DEMAND_T->demand[3].time.second);
//    jData_1010020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1010020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1010020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100204, pData->colStoreTm, pData->colEndTm, intv, jData_1010020X);
//
//    temp = DEMAND_T->demand[4].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[4].time.year, DEMAND_T->demand[4].time.month,
//                                                      DEMAND_T->demand[4].time.day, DEMAND_T->demand[4].time.hour,
//                                                      DEMAND_T->demand[4].time.minute, DEMAND_T->demand[4].time.second);
//    jData_1010020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1010020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1010020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100205, pData->colStoreTm, pData->colEndTm, intv, jData_1010020X);
//    
//    return 0;
//}
//
//int froen_10200200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_DEMAND_T *DEMAND_T = (OOP_DEMAND_T*)pData->inDataBuf;
//    char          tempstr[32] = {0};
//    
//    cJSON *jData_1020020X = NULL;
//    float  temp = 0;
//
//    temp = DEMAND_T->demand[0].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[0].time.year, DEMAND_T->demand[0].time.month,
//                                                      DEMAND_T->demand[0].time.day, DEMAND_T->demand[0].time.hour,
//                                                      DEMAND_T->demand[0].time.minute, DEMAND_T->demand[0].time.second);
//    jData_1020020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1020020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1020020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100201, pData->colStoreTm, pData->colEndTm, intv, jData_1020020X);
//    
//    
//    temp = DEMAND_T->demand[1].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[1].time.year, DEMAND_T->demand[1].time.month,
//                                                      DEMAND_T->demand[1].time.day, DEMAND_T->demand[1].time.hour,
//                                                      DEMAND_T->demand[1].time.minute, DEMAND_T->demand[1].time.second);
//    jData_1020020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1020020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1020020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100202, pData->colStoreTm, pData->colEndTm, intv, jData_1020020X);
//
//    temp = DEMAND_T->demand[2].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[2].time.year, DEMAND_T->demand[2].time.month,
//                                                      DEMAND_T->demand[2].time.day, DEMAND_T->demand[2].time.hour,
//                                                      DEMAND_T->demand[2].time.minute, DEMAND_T->demand[2].time.second);
//    jData_1020020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1020020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1020020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100203, pData->colStoreTm, pData->colEndTm, intv, jData_1020020X);
//
//    temp = DEMAND_T->demand[3].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[3].time.year, DEMAND_T->demand[3].time.month,
//                                                      DEMAND_T->demand[3].time.day, DEMAND_T->demand[3].time.hour,
//                                                      DEMAND_T->demand[3].time.minute, DEMAND_T->demand[3].time.second);
//    jData_1020020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1020020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1020020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100204, pData->colStoreTm, pData->colEndTm, intv, jData_1020020X);
//
//    temp = DEMAND_T->demand[4].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[4].time.year, DEMAND_T->demand[4].time.month,
//                                                      DEMAND_T->demand[4].time.day, DEMAND_T->demand[4].time.hour,
//                                                      DEMAND_T->demand[4].time.minute, DEMAND_T->demand[4].time.second);
//    jData_1020020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1020020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1020020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100205, pData->colStoreTm, pData->colEndTm, intv, jData_1020020X);
//    
//    return 0;
//}
//
//int froen_10300200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_DEMAND_T *DEMAND_T = (OOP_DEMAND_T*)pData->inDataBuf;
//    char          tempstr[32] = {0};
//    
//    cJSON *jData_1030020X = NULL;
//    float  temp = 0;
//
//    temp = DEMAND_T->demand[0].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[0].time.year, DEMAND_T->demand[0].time.month,
//                                                      DEMAND_T->demand[0].time.day, DEMAND_T->demand[0].time.hour,
//                                                      DEMAND_T->demand[0].time.minute, DEMAND_T->demand[0].time.second);
//    jData_1030020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1030020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1030020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100201, pData->colStoreTm, pData->colEndTm, intv, jData_1030020X);
//    
//    
//    temp = DEMAND_T->demand[1].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[1].time.year, DEMAND_T->demand[1].time.month,
//                                                      DEMAND_T->demand[1].time.day, DEMAND_T->demand[1].time.hour,
//                                                      DEMAND_T->demand[1].time.minute, DEMAND_T->demand[1].time.second);
//    jData_1030020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1030020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1030020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100202, pData->colStoreTm, pData->colEndTm, intv, jData_1030020X);
//
//    temp = DEMAND_T->demand[2].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[2].time.year, DEMAND_T->demand[2].time.month,
//                                                      DEMAND_T->demand[2].time.day, DEMAND_T->demand[2].time.hour,
//                                                      DEMAND_T->demand[2].time.minute, DEMAND_T->demand[2].time.second);
//    jData_1030020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1030020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1030020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100203, pData->colStoreTm, pData->colEndTm, intv, jData_1030020X);
//
//    temp = DEMAND_T->demand[3].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[3].time.year, DEMAND_T->demand[3].time.month,
//                                                      DEMAND_T->demand[3].time.day, DEMAND_T->demand[3].time.hour,
//                                                      DEMAND_T->demand[3].time.minute, DEMAND_T->demand[3].time.second);
//    jData_1030020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1030020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1030020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100204, pData->colStoreTm, pData->colEndTm, intv, jData_1030020X);
//
//    temp = DEMAND_T->demand[4].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[4].time.year, DEMAND_T->demand[4].time.month,
//                                                      DEMAND_T->demand[4].time.day, DEMAND_T->demand[4].time.hour,
//                                                      DEMAND_T->demand[4].time.minute, DEMAND_T->demand[4].time.second);
//    jData_1030020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1030020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1030020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100205, pData->colStoreTm, pData->colEndTm, intv, jData_1030020X);
//    
//    return 0;
//}
//
//int froen_10400200(int cid, uint16 type, WRITE_RECORD_T *pData, uint32 intv, void *pGdate)
//{
//    OOP_DEMAND_T *DEMAND_T = (OOP_DEMAND_T*)pData->inDataBuf;
//    char          tempstr[32] = {0};
//    
//    cJSON *jData_1040020X = NULL;
//    float  temp = 0;
//
//    temp = DEMAND_T->demand[0].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[0].time.year, DEMAND_T->demand[0].time.month,
//                                                      DEMAND_T->demand[0].time.day, DEMAND_T->demand[0].time.hour,
//                                                      DEMAND_T->demand[0].time.minute, DEMAND_T->demand[0].time.second);
//    jData_1040020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1040020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1040020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100201, pData->colStoreTm, pData->colEndTm, intv, jData_1040020X);
//    
//    
//    temp = DEMAND_T->demand[1].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[1].time.year, DEMAND_T->demand[1].time.month,
//                                                      DEMAND_T->demand[1].time.day, DEMAND_T->demand[1].time.hour,
//                                                      DEMAND_T->demand[1].time.minute, DEMAND_T->demand[1].time.second);
//    jData_1040020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1040020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1040020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100202, pData->colStoreTm, pData->colEndTm, intv, jData_1040020X);
//
//    temp = DEMAND_T->demand[2].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[2].time.year, DEMAND_T->demand[2].time.month,
//                                                      DEMAND_T->demand[2].time.day, DEMAND_T->demand[2].time.hour,
//                                                      DEMAND_T->demand[2].time.minute, DEMAND_T->demand[2].time.second);
//    jData_1040020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1040020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1040020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100203, pData->colStoreTm, pData->colEndTm, intv, jData_1040020X);
//
//    temp = DEMAND_T->demand[3].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[3].time.year, DEMAND_T->demand[3].time.month,
//                                                      DEMAND_T->demand[3].time.day, DEMAND_T->demand[3].time.hour,
//                                                      DEMAND_T->demand[3].time.minute, DEMAND_T->demand[3].time.second);
//    jData_1040020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1040020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1040020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100204, pData->colStoreTm, pData->colEndTm, intv, jData_1040020X);
//
//    temp = DEMAND_T->demand[4].nValue / 10000.0;
//    sprintf(tempstr, "%04d-%02d-%02d %02d:%02d:%02d", DEMAND_T->demand[4].time.year, DEMAND_T->demand[4].time.month,
//                                                      DEMAND_T->demand[4].time.day, DEMAND_T->demand[4].time.hour,
//                                                      DEMAND_T->demand[4].time.minute, DEMAND_T->demand[4].time.second);
//    jData_1040020X = cJSON_CreateObject();
//    cJSON_AddItemToObject(jData_1040020X, "mv", cJSON_CreateNumber(temp));
//    cJSON_AddItemToObject(jData_1040020X, "mdt", cJSON_CreateString(tempstr));
//    min_gather_insert_item(pGdate, type, 0x10100205, pData->colStoreTm, pData->colEndTm, intv, jData_1040020X);
//    
//    return 0;
//}
//
//
//
//MIN_GATHER_FUN_T g_FrozenJs[]
//{
//    {0x00100200, froen_real_00100200},
//    {0x00100200, froen_real_00200200},
//    {0x00100200, froen_real_00300200},
//    {0x00100200, froen_real_00400200},
//    {0x00100200, froen_real_00500200},
//    {0x00100200, froen_real_00600200},
//    {0x00100200, froen_real_00700200},
//    {0x00100200, froen_real_00800200},
//    {0x10100200, froen_10100200},
//    {0x10100200, froen_10200200},
//    {0x10100200, froen_10300200},
//    {0x10100200, froen_10400200},
//};
//uint32 g_FrozenJsNum = sizeof(g_FrozenJs)/sizeof(MIN_GATHER_FUN_T);
//
//MIN_GATHER_FUN_T g_RealJs[]
//{
//    {0x00100200, froen_real_00100200},
//    {0x00200200, froen_real_00200200},
//    {0x20000200, froen_real_20000200},
//    {0x20010200, froen_real_20010200},
//    {0x20010400, froen_real_20010400},
//    {0x20010500, froen_real_20010500},
//    {0x20040200, froen_real_20040200},
//};
//uint32 g_RealJsNum = sizeof(g_RealJs)/sizeof(MIN_GATHER_FUN_T);
//
//
//
//int frozen_init_jiangsu()
//{
//    return min_gather_init(g_FrozenJs, g_FrozenJsNum, g_RealJs, g_RealJsNum, 59, 60);
//}

