#include "baseCommon.h"
#include "oadInfoList.h"
#include "oopservice.h"
#include "commClass.h"
#include "oopStorage.h"
#include "area.h"
#include "appcomm.h"
#include "oopservice.h"

//将版本信息以全局变量的形式写入各个地区的代码中，统一在 area.h 中引用
#ifdef ADV_PU_AMR
FACTORY_VER_TMP_T g_tVer = 
{
    "XXXX",      /**< 厂商代码           */
    "GA01",      /**< 软件版本号         */
    "210909",    /**< 软件版本日期       */
    "DM01",      /**< 硬件版本号         */
    "200624",    /**< 硬件版本日期       */
    "GA01-14",   /**< 厂家扩展信息       */
};
#elif ADV_ST_AMR
FACTORY_VER_TMP_T g_tVer = 
{
    "XXXX",      /**< 厂商代码           */
    "ZA01",      /**< 软件版本号         */
    "210909",    /**< 软件版本日期       */
    "DM01",      /**< 硬件版本号         */
    "200624",    /**< 硬件版本日期       */
    "ZA01-14",   /**< 厂家扩展信息       */
};
#endif

//根据不同台区的配置放开不同的宏
//#define ANHUI_AREA_SMART_TERMINAL   //感知终端
//#define ANHUI_AREA_BREAKER          //断路器
//#define ANHUI_AREA_CHARGE           //有序充电

// 普通参数，列出APDU，长度，数量
const uint8 setDefaultPara[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    {0x06, 0x01, 0x00, 0x43, 0x00, 0x08, 0x00, 0x03, 0x01, 0x00},  //设置终端主动上报
    {0x06, 0x01, 0x01, 0x31, 0x01, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31010900
    {0x06, 0x01, 0x02, 0x31, 0x01, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31010800
    {0x06, 0x01, 0x01, 0x31, 0x04, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31040900
    {0x06, 0x01, 0x02, 0x31, 0x04, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31040800
    {0x06, 0x01, 0x01, 0x31, 0x05, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31050900
    {0x06, 0x01, 0x02, 0x31, 0x05, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31050800
    {0x06, 0x01, 0x01, 0x31, 0x06, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31060900
    {0x06, 0x01, 0x02, 0x31, 0x06, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31060800
    {0x06, 0x01, 0x01, 0x31, 0x0B, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x310B0900
    {0x06, 0x01, 0x02, 0x31, 0x0B, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x310B0800
    {0x06, 0x01, 0x01, 0x31, 0x0D, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x310D0900
    {0x06, 0x01, 0x02, 0x31, 0x0D, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x310D0800
    {0x06, 0x01, 0x01, 0x31, 0x0E, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x310E0900
    {0x06, 0x01, 0x02, 0x31, 0x0E, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x310E0800
    {0x06, 0x01, 0x01, 0x31, 0x0F, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x310F0900
    {0x06, 0x01, 0x02, 0x31, 0x0F, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x310F0800
    {0x06, 0x01, 0x01, 0x31, 0x11, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31110900
    {0x06, 0x01, 0x02, 0x31, 0x11, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31110800
    {0x06, 0x01, 0x01, 0x31, 0x12, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31120900
    {0x06, 0x01, 0x02, 0x31, 0x12, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31120800
    {0x06, 0x01, 0x01, 0x31, 0x14, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31140900
    {0x06, 0x01, 0x01, 0x31, 0x17, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31170900
    {0x06, 0x01, 0x02, 0x31, 0x17, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x31170800
    {0x06, 0x01, 0x01, 0x31, 0x19, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x31190900
    {0x06, 0x01, 0x02, 0x30, 0x30, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x30300800
    {0x06, 0x01, 0x01, 0x30, 0x30, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x30300900
    {0x06, 0x01, 0x02, 0x30, 0x03, 0x0b, 0x00, 0x16, 0x03, 0x00},  //0x30030800
    {0x06, 0x01, 0x01, 0x30, 0x03, 0x0c, 0x00, 0x03, 0x01, 0x00},  //0x30030900
    {0x06, 0x01, 0x02, 0x30, 0x0F, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x300F0800
    {0x06, 0x01, 0x01, 0x30, 0x0F, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x300F0900
    {0x06, 0x01, 0x02, 0x30, 0x10, 0x08, 0x00, 0x16, 0x03, 0x00},  //0x30100800
    {0x06, 0x01, 0x01, 0x30, 0x10, 0x09, 0x00, 0x03, 0x01, 0x00},  //0x30100900
    {0x06, 0x01, 0x26, 0x31, 0x06, 0x06, 0x00, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x03, 0x11, 0x01, 0x11, 
     0x05, 0x01, 0x00, 0x02, 0x06, 0x12, 0x00, 0x01, 0x12, 0x10, 0xe0, 0x12, 0x00, 0x05, 0x12, 0x00, 0x01, 
     0x12, 0x05, 0x28, 0x12, 0x06, 0xe0, 0x00},                                                             //停上电参数
    {0x06, 0x01, 0x01, 0x45, 0x10, 0x02, 0x08, 0x12, 0x01, 0x2C, 0x00 },                                    //默认心跳，以太网
    {0x06, 0x01, 0x01, 0x45, 0x00, 0x02, 0x0C, 0x12, 0x01, 0x2C, 0x00 },                                    //默认心跳，无线公网
    {0x06, 0x01, 0x01, 0xF2, 0x03, 0x04, 0x00, 0x02, 0x02, 0x04, 0x08, 0xFF, 0x04, 0x08, 0xFF, 0x00},       //终端状态量接入
    {0x06, 0x01, 0x03, 0x31, 0x05, 0x06, 0x00, 0x02, 0x02, 0x12, 0x01, 0x2C, 0x11, 0x1C, 0x00},
    {0x06, 0x01, 0x0A, 0x40, 0x30, 0x02, 0x00, 0x02, 0x04, 0x12, 0x09, 0x32, 0x12, 0x07, 0xFE, 0x12, 0x0A, 
     0x50, 0x12, 0x06, 0xE0, 0x00},                                                                         //电压合格率参数
    {0x06, 0x01, 0x39, 0xf2, 0x09, 0x06, 0x00, 0x54, 0x03, 0x00, 0x01, 0x00},                               //配置F2090600    TI=1日
    {0x06,0x01,0x04,0x42,0x04,0x02,0x00,0x02,0x02,0x1b,0x14,0x00,0x00,0x03,0x01,00},//终端广播校时每晚20点                                                                     },
};
const uint16 setDefaultParaLen[] = 
{
    10, //对应上面第一条APDU长度
    10, //对应上面第二条APDU长度
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    41,
    11,
    11,
    16,
    15,
    22,
    12,
};
const uint32 setDefaultParaNum = sizeof(setDefaultPara)/LOCAL_RECV_FRAM_MAXLEN;

// 普通方案，列出APDU，长度，数量
const uint8 actDefaultNormalSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    // 方案一
    {0x07, 0x01, 0x09, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x01, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x04, 0x02, 0x00, 0x14, 0x00, 0x10, 0x02, 0x00, 
     0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 
     0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 
     0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80, 0x02, 
     0x00, 0x10, 0x10, 0x02, 0x00, 0x10, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x21, 0x31, 0x02, 0x01, 
     0x21, 0x32, 0x02, 0x01, 0x21, 0x33, 0x02, 0x01, 0x5c, 0x02, 0x01, 0x10, 0x16, 0x03, 0x00},
    //方案二
    {0x07, 0x01, 0x0c, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x02, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x11, 0x00,
     0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x01, 0x00, 0x40, 0x02, 0x01, 0x00, 0x50, 
     0x02, 0x01, 0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02, 0x01, 0x20, 0x00, 0x02, 
     0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 
     0x20, 0x0a, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5c, 
     0x02, 0x01, 0x10, 0x16, 0x06, 0x00},
    //方案三
    {0x07, 0x01, 0x0f, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x03, 0x12, 0x00, 0x0c, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x06, 0x02, 0x00, 0x14, 0x00, 0x10, 0x02, 0x00, 
     0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 
     0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 
     0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80, 0x02, 
     0x00, 0x10, 0x10, 0x02, 0x00, 0x10, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x21, 0x31, 0x02, 0x02, 
     0x21, 0x32, 0x02, 0x02, 0x21, 0x33, 0x02, 0x02, 0x5c, 0x02, 0x01, 0x10, 0x16, 0x07, 0x00},
    //方案四 
    {0x07, 0x01, 0x10, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x04, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x14, 0x20,
     0x21, 0x02, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13,
     0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02,
     0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00,
     0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 0x20, 0x06, 0x02, 0x00, 0x20,
     0x0a, 0x02, 0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x10, 0x16, 0x06,
     0x00},
    //方案12
    {0x07, 0x01, 0x0c, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x0c, 0x12, 0x05, 0xa0, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x01, 0x5b, 0x00, 0x20, 0x00, 0x02, 0x00, 0x5c, 0x04, 0x01, 0x00, 0x03,
     0x16, 0x01, 0x00},
    //方案7
    {0x07, 0x01, 0x0d, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x07, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x04, 0x02, 0x00, 0x11, 0x20, 0x21, 0x02, 0x00,
     0x00, 0x10, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 
     0x20, 0x02, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 
     0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 
     0x00, 0x00, 0x80, 0x02, 0x00, 0x10, 0x10, 0x02, 0x00, 0x10, 0x20, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x0b, 
     0x16, 0x03, 0x00},
    //方案8
    {0x07, 0x01, 0x10, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x08, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x11, 0x20,
     0x21, 0x02, 0x00, 0x00, 0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40,
     0x02, 0x00, 0x00, 0x50, 0x02, 0x01, 0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02,
     0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00,
     0x20, 0x05, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5c, 
     0x02, 0x01, 0x0b, 0x16, 0x06, 0x00},
    //方案9
    {0x07, 0x01, 0x12, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x09, 0x12, 0x00, 0x3E, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x04, 0x02, 0x00, 0x03, 0x00, 0x10, 0x02, 0x00,
     0x00, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5C, 0x02, 0x02, 0x0C, 0x0E, 0x16, 0x03, 0x00},
    //方案10
    {0x07, 0x01, 0x14, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x0a, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x20,
     0x21, 0x02, 0x00, 0x00, 0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01,
     0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x5c, 0x02, 0x01,
     0x0c, 0x16, 0x06, 0x00},
    //方案11
    {0x07, 0x01, 0x04, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x0b, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x02, 0x00, 0x01, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x00,
     0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 
     0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5c, 0x02, 0x01, 
     0x0e, 0x16, 0x06, 0x00},
    //方案52
    {0x07, 0x01, 0x06, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x34, 0x12, 0x00, 0x3E, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x04, 0x02, 0x00, 0x0A, 0x00, 0x10, 0x02, 0x00,
     0x00, 0x20, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00,
     0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x20, 0x2C,
     0x02, 0x00, 0x5C, 0x02, 0x01, 0x0D, 0x16, 0x03, 0x00},
    //方案13
    {0x07, 0x01, 0x14, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x0d, 0x12, 0x00, 0x01, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x01, 0x5b, 0x00, 0x40, 0x00, 0x02, 0x00, 0x5c, 0x01, 0x16, 0x01, 0x00},
    //方案36
    {0x07, 0x01, 0x1B, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x24, 0x12, 0x00, 0x3E, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x04, 0x02, 0x00, 0x01, 0x25, 0x00, 0x02, 0x00,
     0x5C, 0x02, 0x01, 0x1F, 0x16, 0x03, 0x00},
    //方案37
    {0x07, 0x01, 0x1b, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x25, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x04, 0x02, 0x00, 0x01, 0x25, 0x01, 0x02, 0x00,
     0x5c, 0x02, 0x01, 0x20, 0x16, 0x03, 0x00},
    //方案38
    {0x07, 0x01, 0x1b, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x26, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x04, 0x02, 0x00, 0x01, 0x25, 0x02, 0x02, 0x00,
     0x5c, 0x02, 0x01, 0x21, 0x16, 0x03, 0x00},
    //方案29
    {0x07, 0x01, 0x16, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x1D, 0x12, 0x00, 0x3E, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x04, 0x02, 0x00, 0x0f, 0x00, 0x10, 0x02, 0x00, 
     0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 
     0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 
     0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80, 0x02, 
     0x00, 0x20, 0x21, 0x02, 0x00, 0x5C, 0x02, 0x01, 0x24, 0x16, 0x03, 0x00},
    //方案30
    {0x07, 0x01, 0x10, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x1e, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x0f, 0x20,
     0x21, 0x02, 0x00, 0x00, 0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40,
     0x02, 0x00, 0x00, 0x50, 0x02, 0x01, 0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02,
     0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00,
     0x20, 0x05, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x24, 0x16, 0x06, 0x00},
    //方案31
    {0x07, 0x01, 0x16, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x1f, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x02, 0x00, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x04, 0x02, 0x00, 0x03, 0x00, 0x10, 0x02, 0x00,
     0x00, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x25, 0x16, 0x03, 0x00},
    //方案32
    {0x07, 0x01, 0x10, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x20, 0x12, 0x0b, 0xa0, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x20,
     0x21, 0x02, 0x00, 0x00, 0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01,
     0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x5c, 0x02, 0x01,
     0x25, 0x16, 0x06, 0x00},
    //方案200,总表的准实时方案
    {0x07, 0x01, 0x01, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0xc8, 0x12, 0x00, 0xfa, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x13, 0x5b, 0x00, 0x00, 0x10, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x11, 0x02,
     0x00, 0x5b, 0x00, 0x00, 0x12, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x13, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x20,
     0x02, 0x00, 0x5b, 0x00, 0x00, 0x21, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x22, 0x02, 0x00, 0x5b, 0x00, 0x00,
     0x23, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x30, 0x02, 0x00, 0x5b, 0x00, 0x00, 0x40, 0x02, 0x00, 0x5b, 0x00,
     0x20, 0x00, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x01, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x01, 0x04, 0x00, 0x5b,
     0x00, 0x20, 0x04, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x05, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x06, 0x02, 0x00,
     0x5b, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x17, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x18, 0x02,
     0x00, 0x5c, 0x02, 0x01, 0x10, 0x16, 0x01, 0x00},
#ifdef ANHUI_AREA_SMART_TERMINAL
    //方案60
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x3c, 0x12, 0x00, 0x3e, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x03, 0x5b, 0x00, 0x29, 0x00, 0x02, 0x00, 0x5b, 0x00, 0x28, 0x11, 0x02,
     0x00, 0x5b, 0x00, 0x29, 0x04, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x32, 0x16, 0x01, 0x00},
#endif
#ifdef ANHUI_AREA_BREAKER
    //方案71
    {0x07, 0x01, 0x06, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x47, 0x12, 0x00, 0x01, 0x02,
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0f, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20,
     0x21, 0x02, 0x00, 0x43, 0x20, 0x17, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x16, 0x06, 0x00},
    //方案73
    {0x07, 0x01, 0x02, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x49, 0x12, 0x00, 0x01, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x03, 0x5b, 0x00, 0x20, 0x0d, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x0d, 0x03,
     0x00, 0x5b, 0x00, 0x20, 0x0d, 0x04, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x16, 0x01, 0x00},
    //方案75
    {0x07, 0x01, 0x02, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x4b, 0x12, 0x00, 0x01, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x03, 0x5b, 0x00, 0x20, 0x0e, 0x02, 0x00, 0x5b, 0x00, 0x20, 0x0e, 0x03,
     0x00, 0x5b, 0x00, 0x20, 0x0e, 0x04, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x16, 0x01, 0x00},
    //方案77
    {0x07, 0x01, 0x02, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x4d, 0x12, 0x00, 0x01, 0x02,
     0x02, 0x11, 0x00, 0x00, 0x01, 0x03, 0x5b, 0x00, 0x21, 0x31, 0x02, 0x00, 0x5b, 0x00, 0x21, 0x32, 0x02,
     0x00, 0x5b, 0x00, 0x21, 0x33, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x16, 0x01, 0x00},
#endif
    //智臻感知终端4800抄读方案102
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x66, 0x12, 0x00, 0x0C, 0x02, 
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0F, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x02, 0x02, 0x00, 0x01, 0x48, 
     0x00, 0x04, 0x00, 0x5C, 0x02, 0x01, 0x7d, 0x16, 0x06, 0x00
    },
    //智臻烟感等数据抄读方案103
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x67, 0x12, 0x00, 0x0C, 0x02, 
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0F, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x02, 0x02, 0x00, 0x03, 0x29, 
     0x00, 0x02, 0x00, 0x29, 0x05, 0x02, 0x00, 0x29, 0x04, 0x02, 0x00, 0x5C, 0x02, 0x01, 0x7d, 0x16, 0x06, 
     0x00
    },
    //智臻4122数据抄读方案104
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x68, 0x12, 0x00, 0x0C, 0x02, 
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x05, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x02, 0x02, 0x00, 0x01, 0x41, 
     0x22, 0x02, 0x00, 0x5C, 0x02, 0x01, 0x7d,0x16, 0x06, 0x00
    },
    //智臻4121数据抄读方案105
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x69, 0x12, 0x00, 0x0C, 0x02, 
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x0F, 0x01, 0x01, 0x5B, 0x01, 0x50, 0x02, 0x02, 0x00, 0x01, 0x41, 
     0x21, 0x02, 0x00, 0x5C, 0x02, 0x01, 0x7d, 0x16, 0x06, 0x00 
    },
    //智臻表箱线损数据抄读方案141
    {0x07, 0x01, 0x26, 0x60, 0x14, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x06, 0x11, 0x8d, 0x12, 0x00, 0x0c, 0x02, 
     0x02, 0x11, 0x03, 0x54, 0x01, 0x00, 0x05, 0x01, 0x01, 0x5b, 0x01, 0x50, 0x02, 0x02, 0x00, 0x10, 0x20, 
     0x21, 0x02, 0x00, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 
     0x02, 0x00, 0x20, 0x0e, 0x02, 0x00, 0x20, 0x0e, 0x03, 0x00, 0x20, 0x0e, 0x04, 0x00, 0x00, 0x10, 0x02, 
     0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 
     0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x7d, 0x16, 
     0x06, 0x00
    },
};
const uint16 actDefaultNormalSchLen[] = 
{
    117, //方案1
    108, //方案2
    117, //方案3
    120, //方案4
    37,  //方案12
    105, //方案7
    108, //方案8
    50,  //方案9
    72,  //方案10
    72,  //方案11
    77,  //方案52
    34,  //方案13
    41,  //方案36
    41,  //方案37
    41,  //方案38
    97,  //方案29
    100, //方案30
    49,  //方案31
    72,  //方案32
    144, //方案200,总表的准实时方案
#ifdef ANHUI_AREA_SMART_TERMINAL    
    48,  //方案60
#endif
#ifdef ANHUI_AREA_BREAKER
    48,  //方案71
    48,  //方案73
    48,  //方案75
    48,  //方案77
#endif
    44,  //方案102
    52,  //方案103
    44,  //方案104
    44,  //方案105
    104,  //方案141
};
const uint32 actDefaultNormalSchNum = sizeof(actDefaultNormalSch)/LOCAL_RECV_FRAM_MAXLEN;

// 上报方案，列出APDU，长度，数量
const uint8 actDefaultRptSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //上报方案15
    {0x07, 0x01, 0x00, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x0f, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x14, 0x20, 0x21, 0x02,
     0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00,
     0x00, 0x20, 0x02, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00,
     0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70,
     0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x10, 0x10, 0x02, 0x00, 0x10, 0x20, 0x02, 0x00, 0x21, 0x31, 0x02,
     0x01, 0x21, 0x32, 0x02, 0x01, 0x21, 0x33, 0x02, 0x01, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x10, 0x00},
    //上报方案16
    {0x07, 0x01, 0x02, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x10, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x11, 0x20, 0x21, 0x02,
     0x00, 0x00, 0x10, 0x02, 0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x01, 0x00, 0x40, 0x02, 0x01,
     0x00, 0x50, 0x02, 0x01, 0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02, 0x01, 0x20,
     0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05,
     0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5a, 0x07, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02,
     0x01, 0x10, 0x00},
    //上报方案17
    {0x07, 0x01, 0x04, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x11, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x06, 0x02, 0x00, 0x14, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00,
     0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00,
     0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80,
     0x02, 0x00, 0x10, 0x10, 0x02, 0x00, 0x10, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x21, 0x31, 0x02,
     0x02, 0x21, 0x32, 0x02, 0x02, 0x21, 0x33, 0x02, 0x02, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x00, 0x01, 0x02, 0x01, 0x10, 0x00},
    //上报方案18
    {0x07, 0x01, 0x0a, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x12, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x14, 0x20, 0x21, 0x02,
     0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00,
     0x00, 0x20, 0x02, 0x00, 0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00,
     0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01,
     0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 0x20, 0x06, 0x02, 0x00, 0x20, 0x0a, 0x02,
     0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02, 0x01, 0x10, 0x00},
    //上报方案21
    {0x07, 0x01, 0x08, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x15, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x12, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00,
     0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00,
     0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80,
     0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x21, 0x31, 0x02, 0x01, 0x21, 0x32, 0x02, 0x01, 0x21, 0x33, 0x02,
     0x01, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0x03, 0x00, 0x01, 0x02, 0x01, 0x0b, 0x00},
    //上报方案22
    {0x07, 0x01, 0x0a, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x16, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x11, 0x00, 0x10, 0x02,
     0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x01,
     0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20,
     0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 0x20, 0x0a,
     0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x20, 0x17, 0x02, 0x00, 0x20, 0x18, 0x02, 0x00, 0x5a, 0x07, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02,
     0x01, 0x0b, 0x00},
    //上报方案23
    {0x07, 0x01, 0x0C, 0x60, 0x1C, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x17, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3C, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2A, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x03, 0x00, 0x10, 0x02, 
     0x00, 0x00, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5A, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x01, 0x02, 0x02, 0x0c, 0x0e, 0x00},
    //上报方案24
    {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x18, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x20, 0x02, 0x00, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00,
     0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5A, 0x07, 0xFF, 0xFF, 0xFF, 
     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x0f, 0x02, 0x01, 0x0c, 
     0x00},
    //上报方案51
    {0x07, 0x01, 0x10, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x33, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x00, 0x10, 0x02,
     0x01, 0x00, 0x20, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00,
     0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x01, 0x02, 0x01, 0x0e,
     0x00},
    //上报方案53
    {0x07, 0x01, 0x12, 0x60, 0x1C, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x35, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3C, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2A, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x0A, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00,
     0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x20,
     0x2C, 0x02, 0x00, 0x5A, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
     0xFF, 0xFF, 0x03, 0x00, 0x01, 0x02, 0x01, 0x0d, 0x00},
    //上报方案46
    {0x07, 0x01, 0x1D, 0x60, 0x1C, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x2E, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3C, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x03, 0x00, 0x20, 0x2A, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50,
     0x04, 0x02, 0x00, 0x01, 0x25, 0x00, 0x02, 0x00, 0x5A, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x1F, 0x00},
    //上报方案47
    {0x07, 0x01, 0x1d, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x2f, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x03, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50,
     0x04, 0x02, 0x00, 0x01, 0x25, 0x01, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x20, 0x00},
    //上报方案48
    {0x07, 0x01, 0x1d, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x30, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x03, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50,
     0x04, 0x02, 0x00, 0x01, 0x25, 0x02, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x21, 0x00},
    //上报方案39
    {0x07, 0x01, 0x18, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x27, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x0f, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00,
     0x00, 0x21, 0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00,
     0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0x70, 0x02, 0x00, 0x00, 0x80,
     0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x24, 0x00},
    //上报方案40
    {0x07, 0x01, 0x0a, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x28, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x0f, 0x00, 0x10, 0x02,
     0x01, 0x00, 0x20, 0x02, 0x01, 0x00, 0x30, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x50, 0x02, 0x01,
     0x00, 0x60, 0x02, 0x01, 0x00, 0x70, 0x02, 0x01, 0x00, 0x80, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20,
     0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 0x20, 0x0a,
     0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02, 0x01, 0x24, 0x00},
    //上报方案41
    {0x07, 0x01, 0x18, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x29, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x04, 0x02, 0x00, 0x03, 0x00, 0x10, 0x02,
     0x00, 0x00, 0x20, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x01, 0x02, 0x01, 0x25, 0x00},
    //上报方案42
    {0x07, 0x01, 0x0a, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x2a, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x08, 0x00, 0x10, 0x02,
     0x01, 0x00, 0x20, 0x02, 0x01, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x01, 0x04, 0x00,
     0x20, 0x04, 0x02, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x20, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02, 0x01, 0x25,
     0x00},
    //上报方案50
    {0x07, 0x01, 0x3d, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x32, 0x01, 0x01, 0x51, 0x45, 
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x00, 0x51, 0xf2, 0x09, 0x0A, 
     0x00, 0x00},
    //上报方案201,总表准实时
    {0x07, 0x01, 0x0a, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0xc9, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x17, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 0x00, 0x11, 0x02,
     0x00, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00,
     0x00, 0x21, 0x02, 0x00, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x00, 0x23, 0x02, 0x00, 0x00, 0x00, 0x30,
     0x02, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x20, 0x00, 0x02, 0x00, 0x00, 0x20, 0x01, 0x02, 0x00,
     0x00, 0x20, 0x01, 0x04, 0x00, 0x00, 0x20, 0x04, 0x02, 0x00, 0x00, 0x20, 0x05, 0x02, 0x00, 0x00, 0x20,
     0x06, 0x02, 0x00, 0x00, 0x20, 0x0a, 0x02, 0x00, 0x00, 0x20, 0x17, 0x02, 0x00, 0x00, 0x20, 0x18, 0x02,
     0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
     0x01, 0x00, 0x0f, 0x02, 0x01, 0x10, 0x00},

#ifdef ANHUI_AREA_SMART_TERMINAL 
    //上报方案61
    {0x07, 0x01, 0x28, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x3d, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x07, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x29, 0x00, 0x02, 0x00, 0x00, 0x28, 0x11, 0x02,
     0x00, 0x00, 0x29, 0x04, 0x02, 0x00, 0x5a, 0x0a, 0x01, 0x02, 0x01, 0x32, 0x00},
 #endif
 #ifdef ANHUI_AREA_BREAKER
    //上报方案72
    {0x07, 0x01, 0x07, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x48, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20, 0x21, 0x02,
     0x00, 0x43, 0x20, 0x17, 0x00, 0x5a, 0x0a, 0x01, 0x02, 0x01, 0x33, 0x00},
    //上报方案74
    {0x07, 0x01, 0x0b, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x4a, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x07, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x20, 0x0d, 0x02, 0x00, 0x00, 0x20, 0x0d, 0x03,
     0x00, 0x00, 0x20, 0x0d, 0x04, 0x00, 0x5a, 0x0a, 0x01, 0x02, 0x01, 0x33, 0x00},
    //上报方案76
    {0x07, 0x01, 0x0b, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x4c, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x07, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x20, 0x0e, 0x02, 0x00, 0x00, 0x20, 0x0e, 0x03,
     0x00, 0x00, 0x20, 0x0e, 0x04, 0x00, 0x5a, 0x0a, 0x01, 0x02, 0x01, 0x33, 0x00},
    //上报方案78
    {0x07, 0x01, 0x0b, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x4e, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x07, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x21, 0x31, 0x02, 0x00, 0x00, 0x21, 0x32, 0x02,
     0x00, 0x00, 0x21, 0x33, 0x02, 0x00, 0x5a, 0x0a, 0x01, 0x02, 0x01, 0x33, 0x00},
 #endif
#ifdef ANHUI_AREA_CHARGE 
    //上报方案81
    {0x07, 0x01, 0x14, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x51, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x47, 0x01, 0x02, 0x00, 0x5a, 0x0a, 0x01, 0x02,
     0x01, 0x3c, 0x00},
    //上报方案82
    {0x07, 0x01, 0x14, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x52, 0x01, 0x01, 0x51, 0x45,
     0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x3c, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60,
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60,
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x00, 0x47, 0x02, 0x04, 0x00, 0x5a, 0x0a, 0x01, 0x02,
     0x01, 0x3c, 0x00},
 #endif
     //智臻4800上报方案106
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x6A, 0x01, 0x01, 0x51, 0x45, 
     0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
     0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
     0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20, 0x21, 0x02, 
     0x00, 0x48, 0x00, 0x04, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
     0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x07, 0x01, 0x00, 0x12, 0x27, 0x10, 0x12, 0x2b, 0x90, 0x00
     },
     //智臻4121上报方案107
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x6B, 0x01, 0x01, 0x51, 0x45, 
      0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
      0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
      0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20, 0x21, 0x02, 
      0x00, 0x41, 0x21, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
      0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x07, 0x01, 0x00, 0x12, 0x27, 0x10, 0x12, 0x2b, 0x90, 0x00
     },
     //智臻4122上报方案108
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x6C, 0x01, 0x01, 0x51, 0x45, 
      0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
      0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
      0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20, 0x21, 0x02, 
      0x00, 0x41, 0x22, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
      0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x07, 0x01, 0x00, 0x12, 0x27, 0x10, 0x12, 0x2b, 0x90, 0x00 
     },
     //线损6051上报方案125
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x7d, 0x01, 0x01, 0x51, 0x45, 
      0x00, 0x02, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
      0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
      0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x02, 0x20, 0x21, 0x02, 
      0x00, 0x60, 0x51, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
      0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x01, 0x00
     },
     //烟感数据上报方案124
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x7c, 0x01, 0x01, 0x51, 0x45, 
      0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
      0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
      0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x04, 0x20, 0x21, 0x02, 
      0x00, 0x29, 0x00, 0x02, 0x00, 0x29, 0x04, 0x02, 0x00, 0x29, 0x05, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02, 0x01, 
      0x7d, 0x00 
     },
     //拓扑上报方案126
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x7e, 0x01, 0x01, 0x51, 0x45, 
      0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x00, 0x51, 0x60, 0xf1, 0x02, 
      0x00, 0x00
     },
     //表箱线损上报方案127
     {0x07, 0x01, 0x0e, 0x60, 0x1c, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x7f, 0x01, 0x01, 0x51, 0x45,
      0x10, 0x00, 0x00, 0x54, 0x00, 0x00, 0x14, 0x11, 0x03, 0x02, 0x02, 0x11, 0x01, 0x02, 0x03, 0x51, 0x60, 
      0x12, 0x03, 0x00, 0x60, 0x05, 0x00, 0x20, 0x2a, 0x02, 0x00, 0x00, 0x60, 0x40, 0x02, 0x00, 0x00, 0x60, 
      0x41, 0x02, 0x00, 0x00, 0x60, 0x42, 0x02, 0x00, 0x01, 0x50, 0x02, 0x02, 0x00, 0x10, 0x20, 0x21, 0x02, 
      0x00, 0x20, 0x00, 0x02, 0x00, 0x20, 0x01, 0x02, 0x00, 0x20, 0x04, 0x02, 0x00, 0x20, 0x05, 0x02, 0x00, 
      0x20, 0x0e, 0x02, 0x00, 0x20, 0x0e, 0x03, 0x00, 0x20, 0x0e, 0x04, 0x00, 0x00, 0x10, 0x02, 0x00, 0x00, 
      0x11, 0x02, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x13, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x21, 
      0x02, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x23, 0x02, 0x00, 0x5a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x02, 0x01, 0x7d, 0x00

     },
};
const uint16 actDefaultRptSchLen[] = 
{
    168, //上报方案15
    156, //上报方案16
    168, //上报方案17
    168, //上报方案18
    160, //上报方案21
    156, //上报方案22
    101, //上报方案23
    120, //上报方案24
    120, //上报方案51
    128, //上报方案53
    82,  //上报方案46
    82,  //上报方案47
    82,  //上报方案48
    148, //上报方案39
    148, //上报方案40
    100,  //上报方案41
    120, //上报方案42
    36,  //上报方案50
    177, //上报方案201,总表准实时
#ifdef ANHUI_AREA_SMART_TERMINAL
    81,  //上报方案61
#endif
#ifdef ANHUI_AREA_BREAKER
    80,  //上报方案72
    81,  //上报方案74
    81,  //上报方案76
    81,  //上报方案78
#endif
#ifdef ANHUI_AREA_CHARGE
    71,  //上报方案81
    71,  //上报方案82
#endif
    102,//上报方案106
    102,//上报方案107
    102,//上报方案108
    94,//上报方案125
    104,//上报方案124
    36,//上报方案126
    152,//上报方案127
};
const uint32 actDefaultRptSchNum = sizeof(actDefaultRptSch)/LOCAL_RECV_FRAM_MAXLEN;

// 事件方案，列出APDU，长度，数量
const uint8 actDefaultEventSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    {0x07, 0x01, 0x03, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x01, 0x02, 0x02, 0x11, 0x02, 
     0x01, 0x04, 0x52, 0x30, 0x1B, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x2A, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x13, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x11, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 
     0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x04, 0x01, 0x0A, 0x10, 0x24, 0x03, 0x01, 0x12, 0x00, 
     0x0F, 0x00},
    {0x07, 0x01, 0x04, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x02, 0x02, 0x02, 0x11, 0x02, 
     0x01, 0x03, 0x52, 0x30, 0x1B, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x13, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x11, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x05, 0x02, 0x0C, 0x0D, 0x0E, 0x25, 0x03, 0x01, 0x12, 0x00, 
     0x0F, 0x00},
    {0x07, 0x01, 0x05, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x03, 0x02, 0x02, 0x11, 0x00, 
     0x01, 0x08, 0x52, 0x30, 0x1B, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x2A, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x13, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x11, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 
     0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x2C, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 
     0x20, 0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x1C, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 
     0x20, 0x20, 0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x0F, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 
     0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x2B, 0x02, 0x00, 0x03, 0x20, 0x1E, 
     0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x04, 0x01, 0x0A, 0x10, 0x24, 
     0x03, 0x01, 0x12, 0x00, 0x0F, 0x00},
    {0x07, 0x01, 0x06, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x04, 0x02, 0x02, 0x11, 0x00, 
     0x01, 0x05, 0x52, 0x30, 0x1B, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x13, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x11, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x2C, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 
     0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x2B, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 
     0x20, 0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x05, 0x02, 0x0C, 0x0D, 0x0E, 0x25, 0x03, 0x01, 
     0x12, 0x00, 0x0F, 0x00},
    {0x07, 0x01, 0x07, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x05, 0x02, 0x02, 0x11, 0x00, 
     0x01, 0x04, 0x52, 0x30, 0x16, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x12, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x14, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x15, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 
     0x02, 0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x04, 0x01, 0x0A, 0x10, 0x24, 0x03, 0x01, 0x12, 0x00, 
     0x0C, 0x00},
    {0x07, 0x01, 0x08, 0x60, 0x16, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x06, 0x02, 0x02, 0x11, 0x00, 
     0x01, 0x03, 0x52, 0x30, 0x16, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
     0x22, 0x02, 0x00, 0x52, 0x30, 0x12, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
     0x20, 0x22, 0x02, 0x00, 0x52, 0x30, 0x15, 0x02, 0x00, 0x03, 0x20, 0x1E, 0x02, 0x00, 0x20, 0x20, 0x02, 
     0x00, 0x20, 0x22, 0x02, 0x00, 0x5C, 0x02, 0x05, 0x02, 0x0C, 0x0D, 0x0E, 0x25, 0x03, 0x01, 0x12, 0x00, 
     0x0C, 0x00},
#ifdef ANHUI_AREA_SMART_TERMINAL 
   //温度事件方案62
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x3e, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x30, 0x71, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x32, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //烟雾事件方案63
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x3f, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x30, 0x91, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x32, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //水浸事件方案64
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x40, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x30, 0x92, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x32, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //下挂电能表变化事件70
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x46, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x31, 0x30, 0x02, 0x00, 0x07, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x33, 0x52, 0x02, 0x06, 0x33, 0x52,
     0x02, 0x07, 0x5c, 0x02, 0x01, 0x32, 0x03, 0x01, 0x12, 0x00, 0x40, 0x00},
 #endif
 #ifdef ANHUI_AREA_BREAKER
    //合闸事件方案65
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x41, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x39, 0x01, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //分闸事件方案66
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x42, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x39, 0x02, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //窃电发生事件方案67
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x43, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x39, 0x03, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //窃电恢复事件方案68
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x44, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x39, 0x04, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
    //电能表失准事件方案69
    {0x07, 0x01, 0x2b, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x45, 0x02, 0x02, 0x11, 0x02,
     0x01, 0x01, 0x52, 0x39, 0x05, 0x02, 0x00, 0x05, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20,
     0x22, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x5c, 0x02, 0x01, 0x33, 0x03, 0x01,
     0x12, 0x00, 0x40, 0x00},
 #endif
     //感知终端3130事件抄读方案110
    {0x07, 0x01, 0x06, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x64, 0x02, 0x02, 0x11, 0x00, 
     0x01, 0x01, 0x52, 0x31, 0x30, 0x02, 0x00, 0x07, 0x20, 0x22, 0x02, 0x00, 0x20, 0x1e, 0x02, 0x00, 0x20, 
     0x20, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x33, 0x52, 0x02, 0x06, 0x33, 0x52, 
     0x02, 0x07, 0x5c, 0x02, 0x01, 0x7d, 0x03, 0x01, 0x12, 0x01, 0x00, 0x00
    },
     //感知终端主动上报的事件抄读方案101
    {0x07, 0x01, 0x06, 0x60, 0x16, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x05, 0x11, 0x65, 0x02, 0x02, 0x11, 0x02, 
    0x01, 0x06, 0x52, 0x30, 0x60, 0x02, 0x00, 0x08, 0x20, 0x22, 0x02, 0x00, 0x20, 0x1e, 0x02, 0x00, 0x20, 
    0x20, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x33, 0x50, 0x02, 0x06, 0x33, 0x50, 
    0x02, 0x07, 0x33, 0x50, 0x02, 0x08, 0x52, 0x30, 0x61, 0x02, 0x00, 0x07, 0x20, 0x22, 0x02, 0x00, 0x20, 
    0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x33, 0x51, 
    0x02, 0x06, 0x33, 0x51, 0x02, 0x07, 0x52, 0x30, 0x71, 0x02, 0x00, 0x05, 0x20, 0x22, 0x02, 0x00, 0x20, 
    0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x52, 0x30, 
    0x91, 0x02, 0x00, 0x05, 0x20, 0x22, 0x02, 0x00, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 
    0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x52, 0x30, 0x92, 0x02, 0x00, 0x05, 0x20, 0x22, 0x02, 0x00, 
    0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x52, 
    0x31, 0x06, 0x02, 0x00, 0x06, 0x20, 0x22, 0x02, 0x00, 0x20, 0x1e, 0x02, 0x00, 0x20, 0x20, 0x02, 0x00, 
    0x20, 0x24, 0x02, 0x00, 0x33, 0x00, 0x02, 0x00, 0x33, 0x09, 0x02, 0x06, 0x5c, 0x02, 0x01, 0x7d, 0x03,
    0x01, 0x12, 0x01, 0x00, 0x00

    },
};
const uint16 actDefaultEventSchLen[] = 
{
    104,
    87,
    176,
    123,
    104,
    87,
#ifdef ANHUI_AREA_SMART_TERMINAL
    55,  //温度事件方案62
    55,  //烟雾事件方案63
    55,  //水浸事件方案64
    63,  //下挂电能表变化事件70
#endif
#ifdef ANHUI_AREA_BREAKER
    55,  //合闸事件方案65
    55,  //分闸事件方案66
    55,  //窃电发生事件方案67
    55,  //窃电恢复事件方案68
    55,  //电能表失准事件方案69
#endif
    63,  // 感知终端事件抄读方100
    209,//感知终端事件上报方案101
};
const uint32 actDefaultEventSchNum = sizeof(actDefaultEventSch)/LOCAL_RECV_FRAM_MAXLEN;

// 任务，列出APDU，长度，数量
const uint8 actDefaultTask[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //任务1
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x01, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x01, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务2
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x02, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x02, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x01, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务3
    {0x07, 0x01, 0x10, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x03, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x03, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务4
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x04, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x01, 0x11, 0x04, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务49
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x31, 0x54, 0x01, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0c, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务7
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x07, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x07, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务8
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x08, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x08, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务9
    {0x07, 0x01, 0x13, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x09, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x09, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0F, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务10
    {0x07, 0x01, 0x15, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x0A, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0A, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务11
    {0x07, 0x01, 0x05, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x0B, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0B, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务52
    {0x07, 0x01, 0x07, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x34, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x34, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0F, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务28
    {0x07, 0x01, 0x15, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x1C, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x0D, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x05, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务15
    {0x07, 0x01, 0x01, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x0F, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x0F, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x1E, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务16
    {0x07, 0x01, 0x03, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x10, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x10, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x5A, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务17
    {0x07, 0x01, 0x05, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x11, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x11, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x1E, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务18
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x12, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x12, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务21
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x15, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x15, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务22
    {0x07, 0x01, 0x0B, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x16, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x16, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务23
    {0x07, 0x01, 0x0D, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x17, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x17, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务24
    {0x07, 0x01, 0x0F, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x18, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x18, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务51
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x33, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x33, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务53
    {0x07, 0x01, 0x13, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x35, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x35, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务36
    {0x07, 0x01, 0x1C, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x24, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x24, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0F, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务46
    {0x07, 0x01, 0x1E, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x2E, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x2E, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务37
    {0x07, 0x01, 0x1c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x25, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x25, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务47
    {0x07, 0x01, 0x1e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x2f, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x2f, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务38
    {0x07, 0x01, 0x1c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x26, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x26, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务48
    {0x07, 0x01, 0x1e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x30, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x30, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务29
    {0x07, 0x01, 0x17, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x1D, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1D, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0F, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务39
    {0x07, 0x01, 0x19, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x27, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x27, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务30
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1e, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1e, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务40
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x28, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x28, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务31
    {0x07, 0x01, 0x17, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1f, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x1f, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务41
    {0x07, 0x01, 0x1a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x29, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x29, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务32
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x20, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x20, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务42
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x2a, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x2a, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //事件任务3
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0e, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x03, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0a, 0x11, 0x05, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x04, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //事件任务4
    {0x07, 0x01, 0x0A, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x19, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x04, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0A, 0x11, 0x05, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x04, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //事件任务5
    {0x07, 0x01, 0x0B, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x1A, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x05, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0A, 0x11, 0x05, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x04, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //事件任务6
    {0x07, 0x01, 0x0C, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x1B, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x06, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0A, 0x11, 0x05, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x04, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务50
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x32, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x32, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x08, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //任务200,总表准实时
    {0x07, 0x01, 0x1D, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0xC8, 0x54, 0x01, 0x00, 0x0F,
     0x16, 0x01, 0x11, 0xC8, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x03, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
    //上报任务201,总表准实时
    {0x07, 0x01, 0x1E, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0xC9, 0x54, 0x01, 0x00, 0x0F,
     0x16, 0x04, 0x11, 0xC9, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
#ifdef ANHUI_AREA_SMART_TERMINAL 
    //任务60
    {0x07, 0x01, 0x2a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x3c, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x3c, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},   
    //上报任务61
    {0x07, 0x01, 0x29, 0x60, 0x12, 0x7F, 0x00, 0x01, 0x01, 0x02, 0x0C, 0x11, 0x3D, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x3D, 0x1C, 0x07, 0xE1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x02, 0x00, 0x04, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3B, 0x00},
#endif
#ifdef ANHUI_AREA_BREAKER
    //任务71
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x47, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x01, 0x11, 0x47, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务72
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x48, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x48, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务73
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x49, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x49, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务74
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x4a, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x4a, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x1e, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务75
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x4b, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x4b, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务76
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x4c, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x4c, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x1e, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务77
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x4d, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x4d, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x0f, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务78
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x4e, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x04, 0x11, 0x4e, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x1e, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
 #endif
#ifdef ANHUI_AREA_CHARGE 
    //上报任务81
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x51, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x51, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //上报任务82
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x52, 0x54, 0x01, 0x00, 0x0f,
     0x16, 0x04, 0x11, 0x52, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x05, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
#endif
    //事件3130抄读任务100
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x64, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x02, 0x11, 0x64, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //普通抄读任务102
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x66, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x66, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //普通抄读任务103
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x67, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x67, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //普通抄读任务104
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x68, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x68, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //普通抄读任务105
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x69, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x69, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //普通抄读任务141
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x8d, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x8d, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x04, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案106
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x6a, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x6a, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案107
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x6b, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x6b, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案108
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x6c, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x6c, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案125
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x7d, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x7d, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案124
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x7c, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x7c, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案126
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x7e, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x7e, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
    //上报方案127
    {0x07, 0x01, 0x02, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x7f, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x04, 0x11, 0x7f, 0x1c, 0x07, 0xe1, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x02, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00
    },
};
const uint16 actDefaultTaskLen[] = 
{
    68, //任务1
    68, //任务2
    68, //任务3
    68, //任务4
    68, //任务49
    68, //任务7
    68, //任务8
    68, //任务9
    68, //任务10
    68, //任务11
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68,
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68,
    68, //任务200,总表准实时
    68, //上报任务201,总表准实时
#ifdef ANHUI_AREA_SMART_TERMINAL
    68, //任务60
    68, //上报任务61
#endif
#ifdef ANHUI_AREA_BREAKER
    68, //任务71
    68, //上报任务72
    68, //任务73
    68, //上报任务74
    68, //任务75
    68, //上报任务76
    68, //任务77
    68, //上报任务78
#endif
#ifdef ANHUI_AREA_CHARGE
    68, //上报任务81
    68, //上报任务82
#endif
    68, 
    68, 
    68, 
    68, 
    68, 
    68, 
    68,
    68, 
    68, 
    68, 
    68, 
    68, 
    68,
};
const uint32 actDefaultTaskNum = sizeof(actDefaultTask)/LOCAL_RECV_FRAM_MAXLEN;

//将上面的几个变量填入下表，即可下发默认配置
const APDU_DEF_CFG_T apduDefCfgList[] = 
{
    /* 使用SET(0)还是ACT(1)服务 APDU                           APDULEN                          APDUNUM*/
    {0,                         (uint8 *)setDefaultPara,      (uint16 *)setDefaultParaLen,      (uint32 *)&setDefaultParaNum},
    {1,                         (uint8 *)actDefaultNormalSch, (uint16 *)actDefaultNormalSchLen, (uint32 *)&actDefaultNormalSchNum},
    {1,                         (uint8 *)actDefaultRptSch,    (uint16 *)actDefaultRptSchLen,    (uint32 *)&actDefaultRptSchNum},
    {1,                         (uint8 *)actDefaultEventSch,  (uint16 *)actDefaultEventSchLen,  (uint32 *)&actDefaultEventSchNum},
    {1,                         (uint8 *)actDefaultTask,      (uint16 *)actDefaultTaskLen,      (uint32 *)&actDefaultTaskNum},
    {0xFF,                      NULL,                          NULL,                            NULL},
};


/**********************************************************************
* @name      : set_by_protocol_eare
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_by_protocol_eare(int sockdbfd, uint8 *pSetDefaultApdu, uint16 *pSetDefaultLen, uint32 setDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pSetDefaultApdu == NULL) || (pSetDefaultLen == NULL) || (setDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("set_by_protocol_eare para err pSetDefaultApdu[%p] pSetDefaultLen[%p] setDefaultNum[%d]\n", pSetDefaultApdu, pSetDefaultLen, setDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < setDefaultNum; i++)
    {
        memcpy(apduBuf, &pSetDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_set_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pSetDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&apduBuf[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare ok output apdu:");
            }
            
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pSetDefaultLen[i], "set_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : actDefaultPara_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void act_by_protocol_eare(int sockdbfd, uint8 *pActDefaultApdu, uint16 *pActDefaultLen, uint32 actDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pActDefaultApdu == NULL) || (pActDefaultLen == NULL) || (actDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("act_by_protocol_eare para err pActDefaultApdu[%p] pActDefaultLen[%p] actDefaultNum[%d]\n", pActDefaultApdu, pActDefaultLen, actDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < actDefaultNum; i++)
    {
        memcpy(apduBuf, &pActDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_act_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pActDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare ok output apdu:");
            }
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pActDefaultLen[i], "act_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : set_act_by_protocol_anhui
* @brief     ：进程启动 统一接口
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_act_by_protocol_anhui(int sockdbfd)
{
    uint32 i = 0;
    uint32 num = 0;

    for (i = 0; i < APDU_DEF_CFG_MAX; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0xff)
        {
            break;
        }
    }

    if (i == APDU_DEF_CFG_MAX)
    {
        PRTL_FMT_DEBUG("find no 0xFF\n");
        return;
    }

    num = i;

    for (i = 0; i < num; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0x00)
        {
            set_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
        else if(apduDefCfgList[i].ifSetOrAct == 0x01)
        {
            act_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
    }

    return;
}


/**********************************************************************
* @name      : app_setdefault_cfg_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void app_setdefault_cfg_anhui(int sockdbfd)
{
    set_act_by_protocol_anhui(sockdbfd);

    return;
}
/**********************************************************************
* @name      : rpt_road_compare
* @brief     比较上报方案和普通采集方案的road是否一样
* @param[in] ：
* @param[out]：
* @return    ：
**********************************************************************/
BOOL rpt_road_compare(OOP_ROAD_T *road1, OOP_ROAD_T *road2)
{
    if(road1->oadMain.value!=road2->oadMain.value)
        return FALSE;
    uint8 i,j;
    uint8 flag = 0;
    for(i=0;i<road1->oadCols.nNum;i++)
    {
        //有的时候普通方案不会配冻结时标
        if(road1->oadCols.oad[i].value == 0x20210200)
            continue;
        for(j=0;j<road2->oadCols.nNum;j++)
        {
            if(road1->oadCols.oad[i].value==road2->oadCols.oad[j].value)
            {
                flag = 1;
                break;
            }

        }
        if(flag ==0)
        {
            RPT_FMT_DEBUG("oad %08x 不在采集方案中\n",road1->oadCols.oad[i].value);
            return FALSE;
        }else
        {
            flag = 0;
        }
    }
    return TRUE;
}

/**********************************************************************
* @name      : rtp_plan_normal_taskid_get
* @brief     ：根据上报方案的内容找到对应的抄表任务 主要判断执行频率 抄读数据项
* @param[in] ：rptContext 上报方案的内容
* @param[out]：
* @return    ：对应的普通采集任务id
**********************************************************************/
uint16 rpt_plan_normal_taskid_get(uint16 value,uint8 unit,REPORT_CONTEXT *rptContext)
{
    OOP_TASK_T task;
    OOP_PLAN_NORMAL_T plan;
    uint16 tmpId = 0;
    uint8 i;
    int ret;
    while(tmpId++ < 255)
    {
        ret = app_get_task_list(tmpId, &task);
        if(ret<0)
            continue;
        if(task.planType!=1 ||task.state!=1)
            continue;
        //判断执行频率是否一样
        if(task.acqFreq.unit!=unit&&task.acqFreq.value!=value)
            continue;
        ret = app_get_plan_normal_list(task.planID,&plan);
        if(ret<0)
            continue;
        //再判断抄读数据项
        if(rptContext->choice ==0)
        {
            if(plan.recdCol.csd[0].choice==0 && plan.recdCol.csd[0].oad.value ==rptContext->oad.value)
            {
                return tmpId;
            }
        }else
        {
            for(i=0;i<rptContext->record.tRCSD.nNum;i++)
            {
                if(rptContext->record.tRCSD.cols[i].choice==1)
                {
                    if(rpt_road_compare(&rptContext->record.tRCSD.cols[i].road,&plan.recdCol.csd[0].road)==TRUE )
                    {
                        return tmpId;
                    }
                }

            }
        }
    }
    return 0;
}


