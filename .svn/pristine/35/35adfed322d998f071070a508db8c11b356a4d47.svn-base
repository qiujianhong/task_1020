#include "baseCommon.h"
#include "oadInfoList.h"
#include "oopservice.h"
#include "commClass.h"
#include "oopStorage.h"
#include "area.h"
#include "appcomm.h"
#include "oopservice.h"

//将版本信息以全局变量的形式写入各个地区的代码中，统一在 area.h 中引用
#ifdef ADV_PU_AMR
FACTORY_VER_TMP_T g_tVer = 
{
    "XXXX",      /**< 厂商代码           */
    "GK01",      /**< 软件版本号         */
    "220315",    /**< 软件版本日期       */
    "DM01",      /**< 硬件版本号         */
    "200624",    /**< 硬件版本日期       */
    "01",   /**< 厂家扩展信息       */
};
#elif ADV_ST_AMR
FACTORY_VER_TMP_T g_tVer = 
{
    "XXXX",      /**< 厂商代码           */
    "ZK01",      /**< 软件版本号         */
    "220315",    /**< 软件版本日期       */
    "DM01",      /**< 硬件版本号         */
    "200624",    /**< 硬件版本日期       */
    "01",   /**< 厂家扩展信息       */
};
#endif


// 普通方案，列出APDU，长度，数量
const uint8 actDefaultNormalSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    // 方案一
     {
     0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x01,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
     0x01,0x20,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x11,0x02,0x00,0x5b,0x00,0x00,0x12,0x02,0x00,0x5b,
     0x00,0x00,0x13,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x21,0x02,0x00,0x5b,0x00,0x00,0x22,
     0x02,0x00,0x5b,0x00,0x00,0x23,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,0x00,0x5b,0x00,0x00,0x31,0x02,0x00,0x5b,
     0x00,0x00,0x32,0x02,0x00,0x5b,0x00,0x00,0x33,0x02,0x00,0x5b,0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x41,
     0x02,0x00,0x5b,0x00,0x00,0x42,0x02,0x00,0x5b,0x00,0x00,0x43,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,
     0x00,0x00,0x60,0x02,0x00,0x5b,0x00,0x00,0x70,0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,
     0x02,0x00,0x5b,0x00,0x10,0x20,0x02,0x00,0x5b,0x00,0x10,0x30,0x02,0x00,0x5b,0x00,0x10,0x40,0x02,0x00,0x5b,
     0x00,0x20,0x00,0x02,0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,
     0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,
     0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x01,0x62,0x16,0x01,0x00
     },
     //方案二
     {
     0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x02,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,0x00,
     0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x0e,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x11,0x02,0x00,
     0x00,0x12,0x02,0x00,0x00,0x13,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,
     0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x10,0x30,
     0x02,0x00,0x5c,0x02,0x01,0x62,0x16,0x03,0x00
     },
     //方案三
     {
     0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x03,0x12,0x00,0x0c,0x02,0x02,0x11,0x00,0x00,
     0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x04,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x00,0x30,0x02,0x00,
     0x00,0x40,0x02,0x00,0x5c,0x02,0x01,0x62,0x16,0x01,0x00
     },
     //方案四 
     {
     0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x04,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,0x00,
     0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x0a,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
     0x00,0x30,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x50,0x02,0x00,0x00,0x60,0x02,0x00,0x00,0x70,0x02,0x00,0x00,
     0x80,0x02,0x00,0x10,0x10,0x02,0x00,0x5c,0x02,0x01,0x62,0x16,0x07,0x00
     },
     //方案五
     {
     0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x05,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
     0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x08,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x01,0x00,
     0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,
     0x02,0x00,0x5c,0x02,0x01,0x62,0x16,0x06,0x00
     },
     //方案六
     {0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x06,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
      0x01,0x04,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,
      0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x01,0x51,0x16,0x01,0x00},
     //方案七
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x07,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x01,0x51,0x16,0x03,0x00},
     //方案八
     {0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x08,0x12,0x00,0x0c,0x02,0x02,0x11,0x00,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,0x01,0x51,
      0x16,0x01,0x00},
     //方案九
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x09,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x01,0x51,0x16,0x07,0x00},
     //方案十
     {0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0a,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
      0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x07,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x01,0x00,
      0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x01,0x04,0x00,0x5c,0x02,
      0x01,0x51,0x16,0x06,0x00},
     //方案十一
     {0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0b,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
      0x01,0x12,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,0x00,0x5b,
      0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,0x00,0x00,0x70,
      0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,0x20,0x02,0x00,0x5b,
      0x00,0x20,0x00,0x02,0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,
      0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,
      0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x01,0x52,0x16,0x01,0x00},
     //方案十二
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0c,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x01,0x52,0x16,0x03,0x00},
     //方案十三
     {0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0d,0x12,0x00,0x0c,0x02,0x02,0x11,0x00,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,0x01,0x52,
      0x16,0x01,0x00},
     //方案十四
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0e,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x01,0x52,0x16,0x07,0x00},
     //方案十五
     {0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x0f,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
      0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x07,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x01,0x00,
      0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x5c,0x02,
      0x01,0x52,0x16,0x06,0x00},
     //方案十六
     {0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x10,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
      0x01,0x07,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x20,0x00,0x02,0x00,0x5b,
      0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,0x00,0x40,0x00,
      0x02,0x00,0x5c,0x02,0x02,0x53,0x55,0x16,0x01,0x00},
     //方案十七
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x11,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x02,0x53,0x55,0x16,0x03,0x00},
     //方案十八
     {0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x12,0x12,0x00,0x0c,0x02,0x02,0x11,0x00,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,0x02,0x53,
      0x55,0x16,0x01,0x00},
     //方案十九
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x13,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x02,0x53,0x55,0x16,0x07,0x00},
     //方案二十
     {0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x14,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
      0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x08,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x01,0x00,
      0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x01,0x04,0x00,0x20,0x04,0x02,0x00,0x20,0x05,
      0x02,0x00,0x5c,0x02,0x02,0x53,0x55,0x16,0x06,0x00},
     //方案二十一
     {0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x15,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
      0x01,0x12,0x5b,0x00,0x00,0x10,0x02,0x00,0x5b,0x00,0x00,0x20,0x02,0x00,0x5b,0x00,0x00,0x30,0x02,0x00,0x5b,
      0x00,0x00,0x40,0x02,0x00,0x5b,0x00,0x00,0x50,0x02,0x00,0x5b,0x00,0x00,0x60,0x02,0x00,0x5b,0x00,0x00,0x70,
      0x02,0x00,0x5b,0x00,0x00,0x80,0x02,0x00,0x5b,0x00,0x10,0x10,0x02,0x00,0x5b,0x00,0x10,0x20,0x02,0x00,0x5b,
      0x00,0x20,0x00,0x02,0x00,0x5b,0x00,0x20,0x01,0x02,0x00,0x5b,0x00,0x20,0x04,0x02,0x00,0x5b,0x00,0x20,0x05,
      0x02,0x00,0x5b,0x00,0x20,0x06,0x02,0x00,0x5b,0x00,0x20,0x0a,0x02,0x00,0x5b,0x00,0x20,0x14,0x02,0x00,0x5b,
      0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x02,0x54,0x56,0x16,0x01,0x00},
     //方案二十二
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x16,0x12,0x00,0x3e,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x04,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x02,0x54,0x56,0x16,0x03,0x00},
     //方案二十三
     {0x07,0x01,0x17,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x17,0x12,0x00,0x0c,0x02,0x02,0x11,0x00,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x05,0x02,0x00,0x02,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x5c,0x02,0x02,0x54,
      0x56,0x16,0x01,0x00},
     //方案二十四
     {0x07,0x01,0x16,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x18,0x12,0x00,0x0c,0x02,0x02,0x11,0x02,0x00,
      0x01,0x01,0x5b,0x01,0x50,0x06,0x02,0x00,0x03,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,
      0x5c,0x02,0x02,0x54,0x56,0x16,0x07,0x00},
      //方案二十五
     {0x07,0x01,0x1f,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x19,0x12,0x0b,0xa0,0x02,0x02,0x11,0x03,0x54,
      0x01,0x00,0x0f,0x01,0x01,0x5b,0x01,0x50,0x02,0x02,0x00,0x09,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x01,0x00,
      0x20,0x02,0x01,0x20,0x00,0x02,0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x01,
      0x04,0x00,0x20,0x0a,0x02,0x00,0x5c,0x02,0x02,0x54,0x56,0x16,0x06,0x00},
     //方案41 时钟采集方案
     {0x07,0x01,0x14,0x60,0x14,0x7f,0x00,0x01,0x01,0x02,0x06,0x11,0x29,0x12,0x00,0x01,0x02,0x02,0x11,0x00,0x00,
      0x01,0x01,0x5b,0x00,0x40,0x00,0x02,0x00,0x5c,0x02,0x09,0x11,0x12,0x13,0x51,0x52,0x53,0x54,0x55,0x56,0x16,
      0x01,0x00},
};
const uint16 actDefaultNormalSchLen[] = 
{
    222, //方案1
     93, //方案2
     53, //方案3
     77, //方案4
     72,  //方案5
     54, //方案6
     49, //方案7
     45,  //方案8
     49,  //方案9
     68,  //方案10
     138,  //方案11
     49,  //方案12
     45,  //方案13
     49,  //方案14
     68,  //方案15
     73,  //方案16
     50, //方案17
     46,  //方案18
     50,  //方案19
     73,  //方案20
     139,  //方案21
     50, //方案22
     46,  //方案23
     50,  //方案24
     77,  //方案25
     44,  //方案41
};
const uint32 actDefaultNormalSchNum = sizeof(actDefaultNormalSch)/LOCAL_RECV_FRAM_MAXLEN;


// 事件方案，列出APDU，长度，数量
const uint8 actDefaultEventSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //事件方案1 单相_1级事件方案	掉电、过流、开表盖、电能表清零
    {0x07,0x01,0x27,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x01,0x02,0x02,0x11,0x02,0x01,0x06,0x52,0x30,
     0x05,0x07,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,
     0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x05,0x08,0x00,0x07,0x20,0x1e,0x02,0x00,
     0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,
     0x01,0x82,0x00,0x52,0x30,0x05,0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,
     0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x1b,0x02,0x00,
     0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,0x01,0x00,0x10,0x82,0x01,
     0x52,0x30,0x11,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,
     0x01,0x00,0x10,0x82,0x01,0x52,0x30,0x13,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,
     0x02,0x00,0x00,0x10,0x22,0x01,0x00,0x10,0x82,0x01,0x5c,0x02,0x04,0x11,0x51,0x53,0x55,0x03,0x01,0x12,0x00,
     0x0f,0x00},
    //事件方案2 单相_2级事件方案	校时、电源异常
    {0x07,0x01,0x28,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x02,0x02,0x02,0x11,0x00,0x01,0x02,0x52,0x30,
     0x2c,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,0x01,0x00,
     0x10,0x82,0x01,0x52,0x30,0x16,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,
     0x5c,0x02,0x04,0x11,0x51,0x53,0x55,0x03,0x01,0x12,0x00,0x1f,0x00},

    //事件方案3 单相_3级事件方案	负荷开关误动或拒动
    {0x07,0x01,0x28,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x03,0x02,0x02,0x11,0x00,0x01,0x01,0x52,0x30,
     0x2b,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x5c,0x02,0x04,0x11,0x51,
     0x53,0x55,0x03,0x01,0x12,0x00,0x1f,0x00},
    //事件方案4 三相_1级事件方案	掉电、过流、开表盖、恒定磁场干扰、电能表清零
    {0x07,0x01,0x27,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x04,0x02,0x02,0x11,0x02,0x01,0x07,0x52,0x30,
     0x05,0x07,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,
     0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x05,0x08,0x00,0x07,0x20,0x1e,0x02,0x00,
     0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,
     0x01,0x82,0x00,0x52,0x30,0x05,0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,
     0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x1b,0x02,0x00,
     0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,0x01,0x00,0x10,0x82,0x01,
     0x52,0x30,0x11,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,
     0x01,0x00,0x10,0x82,0x01,0x52,0x30,0x13,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,
     0x02,0x00,0x00,0x10,0x22,0x01,0x00,0x10,0x82,0x01,0x52,0x30,0x2a,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,
     0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,0x01,0x00,0x10,0x82,0x01,0x5c,0x02,0x06,0x12,0x13,0x52,
     0x54,0x56,0x62,0x03,0x01,0x12,0x00,0x0f,0x00},

    //事件方案5 三相_2级事件方案	开端钮盖、校时、电源异常
    {0x07,0x01,0x28,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x05,0x02,0x02,0x11,0x00,0x01,0x03,0x52,0x30,
     0x2c,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,0x01,0x00,
     0x10,0x82,0x01,0x52,0x30,0x16,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,
     0x52,0x30,0x1c,0x02,0x00,0x05,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x00,0x10,0x22,
     0x01,0x00,0x10,0x82,0x01,0x5c,0x02,0x06,0x12,0x13,0x52,0x54,0x56,0x62,0x03,0x01,0x12,0x00,0x1f,0x00},
    //事件方案6
    {0x07,0x01,0x2b,0x60,0x16,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x06,0x02,0x02,0x11,0x00,0x01,0x12,0x52,0x30,
     0x2b,0x02,0x00,0x03,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x52,0x30,0x00,0x07,0x00,
     0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,
     0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x00,0x08,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,
     0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,
     0x52,0x30,0x00,0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,
     0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x04,0x07,0x00,0x07,0x20,0x1e,
     0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,
     0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x04,0x08,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,
     0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x04,
     0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,
     0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x0f,0x02,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,
     0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,
     0x82,0x00,0x52,0x30,0x01,0x07,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,
     0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x01,0x08,0x00,0x07,
     0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,
     0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x01,0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,
     0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,
     0x30,0x02,0x07,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,
     0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x02,0x08,0x00,0x07,0x20,0x1e,0x02,
     0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,
     0x20,0x01,0x82,0x00,0x52,0x30,0x02,0x09,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,
     0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x0d,0x02,
     0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,
     0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x03,0x07,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,
     0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,
     0x00,0x52,0x30,0x03,0x08,0x00,0x07,0x20,0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,
     0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,0x82,0x00,0x20,0x01,0x82,0x00,0x52,0x30,0x03,0x09,0x00,0x07,0x20,
     0x1e,0x02,0x00,0x20,0x20,0x02,0x00,0x20,0x22,0x02,0x00,0x20,0x00,0x22,0x00,0x20,0x01,0x22,0x00,0x20,0x00,
     0x82,0x00,0x20,0x01,0x82,0x00,0x5c,0x02,0x06,0x12,0x13,0x52,0x54,0x56,0x62,0x03,0x01,0x12,0x00,0x0c,0x00},

};
const uint16 actDefaultEventSchLen[] = 
{
    212,    //方案1
    76,     //方案2
    50,    //方案3
    240,     //方案4
    104,   //方案5
    630,   //方案6
 };
const uint32 actDefaultEventSchNum = sizeof(actDefaultEventSch)/LOCAL_RECV_FRAM_MAXLEN;

// 上报方案，列出APDU，长度，数量
const uint8 actDefaultRptSch[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //上报方案1 总表曲线上报方案
    {0x07,0x01,0x00,0x60,0x1c,0x7f,0x00,0x01,0x01,0x02,0x05,0x11,0x01,0x01,0x01,0x51,0x45,0x00,0x02,0x00,
     0x54,0x00,0x00,0x3c,0x11,0x03,0x02,0x02,0x11,0x01,0x02,0x03,0x51,0x60,0x12,0x03,0x00,0x60,0x05,0x00,
     0x20,0x2a,0x02,0x00,0x00,0x60,0x40,0x02,0x00,0x00,0x60,0x41,0x02,0x00,0x00,0x60,0x42,0x02,0x00,0x01,
     0x50,0x02,0x02,0x00,0x08,0x20,0x21,0x02,0x00,0x00,0x10,0x02,0x00,0x00,0x20,0x02,0x00,0x20,0x00,0x02,
     0x00,0x20,0x01,0x02,0x00,0x20,0x04,0x02,0x00,0x20,0x05,0x02,0x00,0x20,0x0a,0x02,0x00,0x5a,0x07,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0x00,0x0f,0x02,0x01,0x62,0x00},
};
const uint16 actDefaultRptSchLen[] = 
{
    120,
};
    
const uint32 actDefaultRptSchNum = sizeof(actDefaultRptSch)/LOCAL_RECV_FRAM_MAXLEN;


// 任务，列出APDU，长度，数量
const uint8 actDefaultTask[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    //任务1
    {0x07, 0x01, 0x05, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x01, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x01, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务2
    {0x07, 0x01, 0x06, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x02, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x02, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务3
    {0x07, 0x01, 0x07, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x03, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x03, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务4
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x04, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x04, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务5
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x05, 0x54, 0x01, 0x00, 0x0f, 
     0x16, 0x01, 0x11, 0x05, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务6
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x06, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x06, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务7
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x07, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x07, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0a, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务8
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x08, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x08, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务9
    {0x07, 0x01, 0x0d, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x09, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x09, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务10
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0a, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0a, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务11
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0b, 0x54, 0x02, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x0b, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务12
    {0x07, 0x01, 0x10, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0c, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0c, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0a, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务13
    {0x07, 0x01, 0x11, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0d, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0d, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务14
    {0x07, 0x01, 0x12, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0e, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0e, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务15
    {0x07, 0x01, 0x13, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x0f, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x0f, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务16
    {0x07, 0x01, 0x14, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x10, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x10, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务17
    {0x07, 0x01, 0x15, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x11, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x11, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0a, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务18
    {0x07, 0x01, 0x07, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x12, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x12, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务19
    {0x07, 0x01, 0x08, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x13, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x13, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务20
    {0x07, 0x01, 0x09, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x14, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x14, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务21
    {0x07, 0x01, 0x0a, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x15, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x15, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务22
    {0x07, 0x01, 0x0b, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x16, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x16, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x0a, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务23
    {0x07, 0x01, 0x0c, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x17, 0x54, 0x03, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x17, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01,
     0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00,
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务24
    {0x07, 0x01, 0x0e, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x18, 0x54, 0x04, 0x00, 0x01,
     0x16, 0x01, 0x11, 0x18, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
    //任务25
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x19, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x19, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
     //任务26
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1a, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1a, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x14, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
     //任务27
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1b, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1b, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
     //任务28
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1c, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1c, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x01, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
     //任务29
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1d, 0x54, 0x04, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1d, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x02, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},
	//任务30
    {0x07, 0x01, 0x0f, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x1e, 0x54, 0x02, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x1e, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x03, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},

	//任务31事件
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x1F,0x54,0x02,0x00,0x01,0x16,0x02,0x11,
     0x01,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0b,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
    //任务32事件
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x20,0x54,0x03,0x00,0x01,0x16,0x02,0x11,
     0x02,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0c,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
    //任务33
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x21,0x54,0x04,0x00,0x01,0x16,0x02,0x11,
     0x03,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0d,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
     //任务34事件
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x22,0x54,0x02,0x00,0x01,0x16,0x02,0x11,
     0x04,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0b,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
    //任务35
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x23,0x54,0x03,0x00,0x01,0x16,0x02,0x11,
     0x05,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0c,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
    //任务36
    {0x07,0x01,0x11,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x24,0x54,0x04,0x00,0x01,0x16,0x02,0x11,
     0x06,0x1c,0x07,0xe2,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x0d,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
     //任务40 总表曲线上报
    {0x07,0x01,0x01,0x60,0x12,0x7f,0x00,0x01,0x01,0x02,0x0c,0x11,0x28,0x54,0x02,0x00,0x01,0x16,0x04,0x11,
     0x01,0x1c,0x07,0xe1,0x01,0x01,0x00,0x00,0x00,0x1c,0x08,0x33,0x01,0x01,0x00,0x00,0x00,0x54,0x01,0x00,
     0x00,0x11,0x01,0x16,0x01,0x12,0x00,0x00,0x12,0x00,0x00,0x02,0x02,0x16,0x00,0x01,0x01,0x02,0x04,0x11,
     0x00,0x11,0x00,0x11,0x17,0x11,0x3b,0x00},
     //任务41
    {0x07, 0x01, 0x06, 0x60, 0x12, 0x7f, 0x00, 0x01, 0x01, 0x02, 0x0c, 0x11, 0x29, 0x54, 0x03, 0x00, 0x01, 
     0x16, 0x01, 0x11, 0x29, 0x1c, 0x07, 0xe2, 0x01, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x08, 0x33, 0x01, 0x01, 
     0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x11, 0x0a, 0x16, 0x01, 0x12, 0x00, 0x00, 0x12, 0x00, 0x00, 
     0x02, 0x02, 0x16, 0x00, 0x01, 0x01, 0x02, 0x04, 0x11, 0x00, 0x11, 0x00, 0x11, 0x17, 0x11, 0x3b, 0x00},

};
const uint16 actDefaultTaskLen[] = 
{
    68, //任务1
    68, //任务2
    68, //任务3
    68, //任务4
    68, //任务5
    68, //任务6
    68, //任务7
    68, //任务8
    68, //任务9
    68, //任务10
    68, //任务11
    68, //任务12
    68, //任务13
    68, //任务14
    68, //任务15
    68, //任务16
    68, //任务17
    68, //任务18
    68, //任务19
    68, //任务20
    68, //任务21
    68, //任务22
    68, //任务23
    68, //任务24
    68, //任务25
    68, //任务26
    68, //任务27
    68, //任务28
    68, //任务29
    68, //任务30

	68, //任务31
    68, //任务32
    68, //任务33
    68, //任务34
    68, //任务35
    68, //任务36
    68, //任务40
    68, //任务41
};
const uint32 actDefaultTaskNum = sizeof(actDefaultTask)/LOCAL_RECV_FRAM_MAXLEN;

const uint8 actDefaultPara[][LOCAL_RECV_FRAM_MAXLEN] = 
{
    {0x06,0x01,0x00,0x43,0x00,0x08,0x00,0x03,0x01,0x00},    //允许上报
    {0x06,0x01,0x00,0xF2,0x09,0x06,0x00,0x54,0x03,0x00,0x01,0x00}, //抄读周期
    {0x06,0x01,0x01,0x31,0x05,0x06,0x00,0x02,0x02,0x12,0x01,0x2c,0x11,0x29,0x00}, //时钟超差事件默认阈值5分钟(300s),关联任务41
    {0x06,0x01,0x15,0x31,0x06,0x06,0x00,0x02,0x02,0x02,0x04,0x04,0x08,0x00,0x11,0x00,0x11,0x05,0x01,0x00,0x02,0x06,0x12,0x00,0x01,0x12,0x10,0xe0,0x12,0x00,0x05,0x12,0x00,0x04,0x12,0x00,0x84,0x12,0x00,0xb0,0x00}, //31060600
    {0x06,0x01,0x00,0x31,0x10,0x06,0x00,0x02,0x01,0x06,0x00,0x00,0x00,0x00,0x00},  //31100600
    {0x06,0x01,0x01,0x30,0x30,0x06,0x00,0x02,0x01,0x11,0x00,0x00},                 //30300600
    {0x06,0x01,0x02,0x31,0x0C,0x06,0x00,0x02,0x02,0x06,0x00,0x00,0x00,0x04,0x11,0x00,0x00}, //310C0600
    {0x06,0x01,0x03,0x31,0x0D,0x06,0x00,0x02,0x02,0x06,0x00,0x00,0x00,0x06,0x11,0x00,0x00}, //310D0600
};
const uint16 actDefaultParaLen[] =
{
    10,
    12,
    15,
    41,
    15,
    12,
    17,
    17,
};
const uint32 actDefaultParaNum = sizeof(actDefaultPara)/LOCAL_RECV_FRAM_MAXLEN;

const uint8 actDefaultEventPara[][LOCAL_RECV_FRAM_MAXLEN] = 
{
{0x06,0x01,0x00,0x31,0x01,0x09,0x00,0x03,0x01,0x00},  //3101 
{0x06,0x01,0x00,0x31,0x04,0x08,0x00,0x16,0x03,0x00},
{0x06,0x01,0x00,0x31,0x04,0x09,0x00,0x03,0x01,0x00},  //31040200
{0x06,0x01,0x00,0x31,0x05,0x08,0x00,0x16,0x03,0x00},
{0x06,0x01,0x00,0x31,0x05,0x09,0x00,0x03,0x01,0x00},  //31050200
{0x06,0x01,0x00,0x31,0x06,0x08,0x00,0x16,0x03,0x00},
{0x06,0x01,0x00,0x31,0x06,0x09,0x00,0x03,0x01,0x00},  //31060200
{0x06,0x01,0x00,0x31,0x09,0x09,0x00,0x03,0x01,0x00},  //3109
{0x06,0x01,0x00,0x31,0x0B,0x09,0x00,0x03,0x01,0x00},  //310B
{0x06,0x01,0x00,0x31,0x0C,0x09,0x00,0x03,0x01,0x00},  //310C
{0x06,0x01,0x00,0x31,0x0D,0x09,0x00,0x03,0x01,0x00},  //310D
{0x06,0x01,0x00,0x31,0x0E,0x09,0x00,0x03,0x01,0x00},  //310E
{0x06,0x01,0x00,0x31,0x0F,0x09,0x00,0x03,0x01,0x00},  //310F
{0x06,0x01,0x00,0x31,0x10,0x09,0x00,0x03,0x01,0x00},  //3110
{0x06,0x01,0x00,0x31,0x14,0x09,0x00,0x03,0x01,0x00},  //3114
{0x06,0x01,0x00,0x31,0x15,0x09,0x00,0x03,0x01,0x00},  //3115
{0x06,0x01,0x00,0x31,0x18,0x09,0x00,0x03,0x01,0x00},  //3118
{0x06,0x01,0x00,0x31,0x19,0x09,0x00,0x03,0x01,0x00},  //3119
{0x06,0x01,0x00,0x32,0x00,0x09,0x00,0x03,0x01,0x00},  //3200
{0x06,0x01,0x00,0x32,0x01,0x09,0x00,0x03,0x01,0x00},  //3201
{0x06,0x01,0x00,0x32,0x02,0x09,0x00,0x03,0x01,0x00},  //3202
{0x06,0x01,0x00,0x30,0x30,0x09,0x00,0x03,0x01,0x00},  //3030
{0x06,0x01,0x00,0x30,0x30,0x08,0x00,0x16,0x01,0x00},
{0x06,0x01,0x00,0x31,0x11,0x09,0x00,0x03,0x01,0x00},  //3111
{0x06,0x01,0x00,0x31,0x11,0x08,0x00,0x16,0x01,0x00},
{0x06,0x01,0x00,0x31,0x12,0x09,0x00,0x03,0x01,0x00},  //3112
{0x06,0x01,0x00,0x31,0x12,0x08,0x00,0x16,0x01,0x00},
{0x06,0x01,0x00,0x31,0x1F,0x09,0x00,0x03,0x01,0x00},  //311f
{0x06,0x01,0x00,0x31,0x1F,0x08,0x00,0x16,0x01,0x00},
{0x06,0x01,0x00,0x30,0x11,0x09,0x00,0x03,0x01,0x00},  //3011
{0x06,0x01,0x00,0x30,0x11,0x08,0x00,0x16,0x03,0x00},
};
const uint16 actDefaultEventParaLen[] =
{
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
};
const uint32 actDefaultEventParaNum = sizeof(actDefaultEventPara)/LOCAL_RECV_FRAM_MAXLEN;

//将上面的几个变量填入下表，即可下发默认配置
const APDU_DEF_CFG_T apduDefCfgList[] = 
{
    /* 使用SET(0)还是ACT(1)服务 APDU                           APDULEN                          APDUNUM*/
    //{0,                         (uint8 *)setDefaultPara,      (uint16 *)setDefaultParaLen,      (uint32 *)&setDefaultParaNum},
    {1,                         (uint8 *)actDefaultNormalSch, (uint16 *)actDefaultNormalSchLen, (uint32 *)&actDefaultNormalSchNum},
//    {1,                         (uint8 *)actDefaultRptSch,    (uint16 *)actDefaultRptSchLen,    (uint32 *)&actDefaultRptSchNum},
    {1,                         (uint8 *)actDefaultEventSch,  (uint16 *)actDefaultEventSchLen,  (uint32 *)&actDefaultEventSchNum},
    {1,                         (uint8 *)actDefaultTask,      (uint16 *)actDefaultTaskLen,      (uint32 *)&actDefaultTaskNum},
    {0,                         (uint8 *)actDefaultPara,      (uint16 *)actDefaultParaLen,      (uint32 *)&actDefaultParaNum},
    {0,                         (uint8 *)actDefaultEventPara, (uint16 *)actDefaultEventParaLen, (uint32 *)&actDefaultEventParaNum},
    {0xFF,                      NULL,                          NULL,                            NULL},
};

/**********************************************************************
* @name      : set_by_protocol_eare
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_by_protocol_eare(int sockdbfd, uint8 *pSetDefaultApdu, uint16 *pSetDefaultLen, uint32 setDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pSetDefaultApdu == NULL) || (pSetDefaultLen == NULL) || (setDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("set_by_protocol_eare para err pSetDefaultApdu[%p] pSetDefaultLen[%p] setDefaultNum[%d]\n", pSetDefaultApdu, pSetDefaultLen, setDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < setDefaultNum; i++)
    {
        memcpy(apduBuf, &pSetDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_set_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pSetDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&apduBuf[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "set_by_protocol_eare ok output apdu:");
            }
            
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pSetDefaultLen[i], "set_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : actDefaultPara_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void act_by_protocol_eare(int sockdbfd, uint8 *pActDefaultApdu, uint16 *pActDefaultLen, uint32 actDefaultNum)
{
    uint32           i = 0;
    CHANNEL_CACHE_T  *tChannel = NULL;
    int              msglen = 0;
    uint8            uNewApdu[LOCAL_RECV_FRAM_MAXLEN] = {0};
    uint8            apduBuf[LOCAL_RECV_FRAM_MAXLEN] = {0};

    if ((pActDefaultApdu == NULL) || (pActDefaultLen == NULL) || (actDefaultNum == 0))
    {
        PRTL_FMT_DEBUG("act_by_protocol_eare para err pActDefaultApdu[%p] pActDefaultLen[%p] actDefaultNum[%d]\n", pActDefaultApdu, pActDefaultLen, actDefaultNum);
        return;
    }

    tChannel = (CHANNEL_CACHE_T  *)malloc(sizeof(CHANNEL_CACHE_T));
    memset(tChannel, 0, sizeof(CHANNEL_CACHE_T));

    tChannel->clientid = sockdbfd;

    for (i = 0; i < actDefaultNum; i++)
    {
        memcpy(apduBuf, &pActDefaultApdu[i*LOCAL_RECV_FRAM_MAXLEN], LOCAL_RECV_FRAM_MAXLEN);

        msglen = invoke_act_req(tChannel, &apduBuf[OOP_DATA_OFFSET], pActDefaultLen[i] - OOP_DATA_OFFSET, &uNewApdu[OOP_DATA_OFFSET], LOCAL_RECV_FRAM_MAXLEN - OOP_DATA_OFFSET);
        if (msglen != 0)
        {
            if (uNewApdu[7] != 0)
            {
                PRTL_BUF_DEBUG(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare err[%d] output apdu:", uNewApdu[7]);
            }
            else
            {
                PRTL_BUF_TRACE(&uNewApdu[OOP_DATA_OFFSET], msglen, "act_by_protocol_eare ok output apdu:");
            }
        }
        else
        {
            PRTL_BUF_DEBUG(&apduBuf[0], pActDefaultLen[i], "act_by_protocol_eare err input apdu:");
        } 
    }

    free(tChannel);
    tChannel = NULL;
    return;
}

/**********************************************************************
* @name      : set_act_by_protocol_anhui
* @brief     ：进程启动 统一接口
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void set_act_by_protocol_hubei(int sockdbfd)
{
    uint32 i = 0;
    uint32 num = 0;

    for (i = 0; i < APDU_DEF_CFG_MAX; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0xff)
        {
            break;
        }
    }

    if (i == APDU_DEF_CFG_MAX)
    {
        PRTL_FMT_DEBUG("find no 0xFF\n");
        return;
    }

    num = i;

    for (i = 0; i < num; i++)
    {
        if (apduDefCfgList[i].ifSetOrAct == 0x00)
        {
            set_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
        else if(apduDefCfgList[i].ifSetOrAct == 0x01)
        {
            act_by_protocol_eare(sockdbfd, apduDefCfgList[i].apduBuf, apduDefCfgList[i].apduBufLen, *apduDefCfgList[i].apduNum);
        }
    }

    return;
}

/**********************************************************************
* @name      : app_set_default_acfile_jiangsu
* @brief     ：江苏设置默认的交采档案
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void app_set_default_acfile_hubei(int sockdbfd )
{
    NOMAL_OAD_T NomalOad;
    OOP_METER_T gMeterFile;
    uint8 *paddr= NULL;
    uint8 addrlen;
    int ret;
    memset(&NomalOad,0x00,sizeof(NOMAL_OAD_T));
    NomalOad.logicId = 0;
    NomalOad.oad.value =0x60000200;
    NomalOad.classtag = CLASS_DATA_INIT;
    NomalOad.infoNum = 1;
    
    memset(&gMeterFile,0x00,sizeof(OOP_METER_T));
    gMeterFile.nIndex = 1;
    gMeterFile.basic.port.value= 0xf2080201;
    gMeterFile.basic.protocol = 3;
    gMeterFile.basic.pwrType =3;
    gMeterFile.basic.userType = 98;
    addrlen = app_get_localaddr(&paddr);
    if(addrlen!=0)
    {
        gMeterFile.basic.tsa.len = addrlen-1;
        memcpy(gMeterFile.basic.tsa.add,paddr,addrlen);
    }
    PRTL_BUF_DEBUG(paddr,addrlen, "写入默认交采档案 \n");
    ret = db_write_nomal(sockdbfd,&NomalOad,(uint8*)&gMeterFile,sizeof(gMeterFile));
    if(ret !=0)
    {
        PRTL_FMT_DEBUG( "写入默认交采档案失败 \n");
    }
}

/**********************************************************************
* @name      : app_setdefault_cfg_anhui
* @brief     ：进程启动 设置地区默认参数
* @param[in] ：int sockdbfd    句柄
* @param[out]：
* @return    ：
**********************************************************************/
void app_setdefault_cfg_hubei(int sockdbfd)
{
    set_act_by_protocol_hubei(sockdbfd);
    app_set_default_acfile_hubei(sockdbfd);
    return;
}




